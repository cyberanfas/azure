{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 11,
      "content": {
        "version": "LinkItem/1.0",
        "style": "tabs",
        "links": [
          {
            "id": "d825595f-fa16-4dde-8e65-582a2f400597",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Dashboard",
            "subTarget": "dashboard",
            "style": "link"
          },
          {
            "id": "58d97f38-d76b-45e2-863f-6fd5dd375b2d",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Traffic Management",
            "subTarget": "netmgt",
            "preText": "Bot Management",
            "style": "link"
          },
          {
            "id": "013ffc14-bdca-4769-bd02-c553cacd8997",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Bot Management",
            "subTarget": "botmgt",
            "preText": "Bot Management",
            "style": "link"
          },
          {
            "id": "98921b86-110b-49b3-9dc7-bf120a93bec9",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Attack Management",
            "subTarget": "attackmgt",
            "style": "link"
          },
          {
            "id": "7fc817bd-675d-467c-8095-242a4eb36209",
            "cellValue": "SelectedTab",
            "linkTarget": "parameter",
            "linkLabel": "Alerts",
            "subTarget": "alerts",
            "style": "link"
          }
        ]
      },
      "customWidth": "65",
      "name": "links - 1"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "5238ee31-f01d-48b5-83cb-1464fa3c069d",
            "version": "KqlParameterItem/1.0",
            "name": "TimeRange",
            "label": "Time Range",
            "type": 4,
            "isRequired": true,
            "isGlobal": true,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 172800000
                },
                {
                  "durationMs": 604800000
                },
                {
                  "durationMs": 2592000000
                }
              ],
              "allowCustom": true
            },
            "value": {
              "durationMs": 86400000
            }
          },
          {
            "id": "7312a54f-aeb5-4ce4-b054-470ee8b6e1d9",
            "version": "KqlParameterItem/1.0",
            "name": "ChartType",
            "label": "Chart Type",
            "type": 2,
            "isRequired": true,
            "isGlobal": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n { \"value\": \"render areachart\", \"label\": \"Area Chart\", \"selected\":true},\r\n {\"value\": \"render barchart\", \"label\": \"Bar Chart\"},\r\n { \"value\": \"render timechart\", \"label\": \"Time Chart\"},\r\n { \"value\": \"render scatterchart\", \"label\": \"Scatter Chart\"},\r\n { \"value\": \"render piechart\", \"label\": \"Pie Chart\"}\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "f93282e3-1e24-49cd-807a-b4d68c385494",
            "version": "KqlParameterItem/1.0",
            "name": "Site",
            "type": 2,
            "isRequired": true,
            "isGlobal": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n { \"value\": \"https://www.altra.org:443/\", \"label\": \"www.altra.org\", \"selected\":true},\r\n {\"value\": \"https://chatbot.altra.org:443/\", \"label\": \"chatbot.altra.org\"}\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "5bb31cd8-4a21-4873-9c30-8d7809f0da17",
            "version": "KqlParameterItem/1.0",
            "name": "Help",
            "type": 10,
            "isRequired": true,
            "isGlobal": true,
            "typeSettings": {
              "additionalResourceOptions": []
            },
            "jsonData": "[\r\n { \"value\": \"yes\", \"label\": \"Yes\"},\r\n {\"value\": \"no\", \"label\": \"No\", \"selected\":true}\r\n]",
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SelectedTab",
          "comparison": "isNotEqualTo",
          "value": "dashboard"
        },
        {
          "parameterName": "SelectedTab",
          "comparison": "isNotEqualTo",
          "value": "alerts"
        }
      ],
      "customWidth": "35",
      "name": "parameters - 2"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "1269808f-e30c-4849-9857-94e2ab137a1d",
            "version": "KqlParameterItem/1.0",
            "name": "lookuprange",
            "label": "Lookup Time",
            "type": 4,
            "typeSettings": {
              "selectableValues": [
                {
                  "durationMs": 300000
                },
                {
                  "durationMs": 900000
                },
                {
                  "durationMs": 1800000
                },
                {
                  "durationMs": 3600000
                },
                {
                  "durationMs": 14400000
                },
                {
                  "durationMs": 43200000
                },
                {
                  "durationMs": 86400000
                },
                {
                  "durationMs": 259200000
                },
                {
                  "durationMs": 604800000
                }
              ],
              "allowCustom": true
            },
            "timeContext": {
              "durationMs": 86400000
            },
            "value": {
              "durationMs": 3600000
            }
          },
          {
            "id": "e06b521d-2620-4bad-a75e-d91e284b2f16",
            "version": "KqlParameterItem/1.0",
            "name": "Help2",
            "type": 10,
            "isRequired": true,
            "isGlobal": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n { \"value\": \"yes\", \"label\": \"Yes\"},\r\n {\"value\": \"no\", \"label\": \"No\", \"selected\":true}\r\n]",
            "timeContext": {
              "durationMs": 86400000
            },
            "label": "Help"
          },
          {
            "id": "155e99f3-6631-4f44-b07e-87e6f5e1e234",
            "version": "KqlParameterItem/1.0",
            "name": "DDoS",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nlet whitelist = _GetWatchlist(\"whiteip\");\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where hostName_s == \"www.altra.org\" or hostName_s == \"chatbot.altra.org\"\r\n| summarize count() by bin(TimeGenerated, 5m), hostName_s, clientIP_s = clientIp_s, clientCountry_s\r\n| where count_ > 1000\r\n| join kind=leftanti whitelist on clientIP_s\r\n| join kind = leftsemi (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where ruleName_s == \"RateLimitRule\"\r\n| distinct clientIP_s\r\n) on clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| extend ActionTaken = \"Blocked\"\r\n| order by TimeGenerated desc, clientIP_s\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", hostName_s, \"|\", clientIP_s, \"|\", toint(count_), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "5e6a0e78-44f6-4c76-bc6a-0eac253732fa",
            "version": "KqlParameterItem/1.0",
            "name": "SQL",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s contains \"SQL\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "a0b7e24d-4594-485a-aaff-8ca89f869bda",
            "version": "KqlParameterItem/1.0",
            "name": "XSS",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s contains \"XSS\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "0f250732-dcb2-45ff-9985-2c0be155ebf9",
            "version": "KqlParameterItem/1.0",
            "name": "LFI",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s contains \"LFI\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "RFI",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s contains \"RFI\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "id": "05c6980d-3342-4596-a876-9ccf97a609e9"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "PHP",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s contains \"PHP\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "id": "28a63033-f5f4-47cb-9fc6-8ce248fa12b6"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "NODEJS",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s contains \"NODEJS\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "id": "186c045f-7d1e-4cec-ac1f-ef6852a73559"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "JAVA",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s contains \"JAVA\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "id": "8e9ef8ff-97b2-4fd1-9d17-df89b4919335"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "PROTOCOLATTACK",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s contains \"PROTOCOL-ATTACK\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "id": "43b837cd-d36e-4f17-835a-c976e892f98e"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "FIX",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s contains \"FIX\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "id": "f38524cf-230e-41ef-8122-c6f3d95ae9b1"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "WebShell",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s contains \"WebShell\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "id": "9939e4aa-6695-49b2-9083-069d3738d02f"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "CVE",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s contains \"CVE\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "id": "20424f1c-cc57-4224-bcbc-feea2d2966ad"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "PATHT",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s contains \"99030002\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces",
            "id": "37815e40-d59a-47f9-904e-7f032e9213c3"
          },
          {
            "id": "f71c1626-4ec2-4ab7-9517-85cd1d580cd8",
            "version": "KqlParameterItem/1.0",
            "name": "RCE",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s contains \"RCE\" and ruleName_s notcontains \"PROTOCOL\" and ruleName_s notcontains \"METHOD\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "bc3e046b-ec9d-4e96-9f21-3b238ed58cec",
            "version": "KqlParameterItem/1.0",
            "name": "UNUSUALREQ200",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nlet whitelist = _GetWatchlist(\"whiteip\");\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where hostName_s == \"www.altra.org\" or hostName_s == \"chatbot.altra.org\"\r\n| summarize count() by bin(TimeGenerated, 1m), hostName_s, clientIP_s = clientIp_s, clientCountry_s\r\n| where count_ > 300\r\n| join kind=leftanti whitelist on clientIP_s\r\n| join kind = leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s\r\n) on clientIP_s\r\n| join kind = leftsemi(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIP_s\r\n) on clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc, clientIP_s\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", hostName_s, \"|\", clientIP_s, \"|\", toint(count_), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "a57ab642-6deb-4018-b0f5-2a82df0a9416",
            "version": "KqlParameterItem/1.0",
            "name": "PENTEST",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Bot300200\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          },
          {
            "id": "03ef5373-ff84-4ac3-b876-8849b6edc266",
            "version": "KqlParameterItem/1.0",
            "name": "UBOTSTI",
            "type": 1,
            "isRequired": true,
            "query": "let AltraAlerts = _GetWatchlist('altrainsights');\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Bot300600\"\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind=leftanti (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated {lookuprange}\r\n| where policy_s == \"ALTRAPRODWAF\"\r\n| where action_s == \"Block\"\r\n| distinct clientIP_s, trackingReference_s\r\n) on clientIP_s, trackingReference_s\r\n| project TimeGenerated, clientIP_s, host_s, trackingReference_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where TimeGenerated {lookuprange}\r\n| distinct clientIp_s, clientCountry_s, host_s, httpStatusCode_d, trackingReference_s\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s\r\n| where toint(httpStatusCode_d) >= 100 and toint(httpStatusCode_d) < 300\r\n| summarize arg_max(TimeGenerated, *) by host_s, clientIP_s\r\n| join kind = leftouter (\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) > datetime_add('day', -180, {lookuprange:start})\r\n| summarize arg_max(todatetime(TimeGenerated), *) by SearchKey\r\n) on $left.clientIP_s == $right.SearchKey\r\n| join kind = leftouter(\r\nAltraAlerts\r\n| where todatetime(TimeGenerated) {lookuprange}\r\n| extend ActionTaken = SearchKey\r\n| project ActionTaken\r\n) on $left.clientIP_s == $right.ActionTaken\r\n| extend ActionTaken = iff(clientIP_s == ActionTaken, \"Completed\", \"Pending\")\r\n| order by TimeGenerated desc\r\n| extend String = strcat(\"\\t\\n|\", format_datetime(TimeGenerated, 'MM-dd-yy [HH:mm:ss]'), \"|\", host_s, \"|\", clientIP_s, \"|\", toint(httpStatusCode_d), \"|\", clientCountry_s, \"|\", Severity, \"|\", Reputation, \"|\", ActionTaken, \"|\")\r\n| project String",
            "isHiddenWhenLocked": true,
            "queryType": 0,
            "resourceType": "microsoft.operationalinsights/workspaces"
          }
        ],
        "style": "pills",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "SelectedTab",
          "comparison": "isNotEqualTo",
          "value": "botmgt"
        },
        {
          "parameterName": "SelectedTab",
          "comparison": "isNotEqualTo",
          "value": "attackmgt"
        },
        {
          "parameterName": "SelectedTab",
          "comparison": "isNotEqualTo",
          "value": "netmgt"
        }
      ],
      "customWidth": "35",
      "name": "parameters - 7"
    },
    {
      "type": 1,
      "content": {
        "json": "---"
      },
      "name": "text - 4"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "loadType": "always",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Help!\r\n\r\n#### There are two modes to the Dashboard.\r\n\r\n|Mode|Description|\r\n|---|---|\r\n|All|A summary of the most important information about the hosted websites, all available at a glance on a single page. This option may entail periodically scrolling through the page to cover all of the information.|\r\n|Smart|The smart mode employs a custom tailored logic designed specifically for Altra to assist us in viewing the graphs based on the criticality of the moment. For example, if there are no unusual events occurring, the graph displays overall traffic information by default; however, if there is an unusual amount of activity in the environment involving bots or attackers, the graph dynamically changes to the critical graph, which may require your attention. Please keep in mind that the smart mode is a live monitor mode that does not rely on the Look-up Time selected above because it displays graphs based on the last 15 minutes of activity.|\r\n\r\n##### Note: You may also receive notifications on the top of the dashboard about critical alerts that you need to investigate. When it appears, please click the 'Alerts' tab to view more information about the alert you're dealing with.\r\n\r\n##### Note 2: We can also change the Look-up Time on the Dashboard or the Alerts tab to see if there have been any previous attacks. For example, if I go on leave for the day, I can simply go back 48 hours to see if anything happened while I was gone.",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help2",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "text - 17"
          },
          {
            "type": 1,
            "content": {
              "json": "---"
            },
            "conditionalVisibility": {
              "parameterName": "Help2",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "text - 18"
          },
          {
            "type": 1,
            "content": {
              "json": "### Denial-of-Service Attack Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "DDoS",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6"
          },
          {
            "type": 1,
            "content": {
              "json": "### SQL Injection Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "SQL",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Web Crawling / Penetration Testing Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "PENTEST",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Suspicious Bot Activity Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "UBOTSTI",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Cross-Site Scripting Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "XSS",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Local File Inclusion Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "LFI",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Remote File Inclusion Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "RFI",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### PHP Injection Attack Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "PHP",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Node.JS Injection Attack Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "NODEJS",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Suspicious Java Class Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "JAVA",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Protocol Attack Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "PROTOCOLATTACK",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Session Fixation Attack Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "FIX",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Web-Shell Attack Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "WebShell",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Common Vulnerabilities and Exposures Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "CVE",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Path Traversal Evasion Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "PATHT",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Remote Code Execution Detected",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "RCE",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Unusual Amount of Requests sent by Host(s)",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "UNUSUALREQ200",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "customWidth": "65",
            "name": "text - 20"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "6371653a-d5d5-4cbf-b3b7-614f71b32d8f",
                  "version": "KqlParameterItem/1.0",
                  "name": "viewmode",
                  "label": "Viewing Mode",
                  "type": 10,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\r\n{\"value\": \"all\", \"label\": \"All\", \"Selected\": true},\r\n{\"value\": \"auto\", \"label\": \"Smart\"}\r\n]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "all"
                },
                {
                  "id": "e2ee9a22-ffd0-401d-b67a-b689d8c22989",
                  "version": "KqlParameterItem/1.0",
                  "name": "cmsoverallthresh",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where host_s == \"www.altra.org\"\r\n| where TimeGenerated > datetime_add('day', -30, {lookuprange:start})\r\n| summarize count() by bin(TimeGenerated, {lookuprange:grain})\r\n| summarize toint(avg(count_))",
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "cmsbotthresh",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where host_s == \"www.altra.org\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| where TimeGenerated > datetime_add('day', -30, {lookuprange:start})\r\n| summarize count() by bin(TimeGenerated, {lookuprange:grain})\r\n| summarize toint(avg(count_))",
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "5c7a8dce-f52f-43a7-b58b-bc63aee4e877"
                },
                {
                  "id": "96606727-1029-44ed-a2be-ae93e85f7fa2",
                  "version": "KqlParameterItem/1.0",
                  "name": "cmsattackthresh",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where host_s == \"www.altra.org\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| where TimeGenerated > datetime_add('day', -30, {lookuprange:start})\r\n| summarize count() by bin(TimeGenerated, {lookuprange:grain})\r\n| summarize toint(avg(count_))",
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "cmschatoverallthresh",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where host_s == \"chatbot.altra.org\"\r\n| where TimeGenerated > datetime_add('day', -30, {lookuprange:start})\r\n| summarize count() by bin(TimeGenerated, {lookuprange:grain})\r\n| summarize toint(avg(count_))",
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "b52b5e3e-499c-41c6-a3d0-e88ce4c56691"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "cmschatbotthresh",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where host_s == \"chatbot.altra.org\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| where TimeGenerated > datetime_add('day', -30, {lookuprange:start})\r\n| summarize count() by bin(TimeGenerated, {lookuprange:grain})\r\n| summarize toint(avg(count_))",
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "2780fed3-3d36-4cf7-ac68-7e99cce2a173"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "cmschatattackthresh",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where host_s == \"chatbot.altra.org\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| where TimeGenerated > datetime_add('day', -30, {lookuprange:start})\r\n| summarize count() by bin(TimeGenerated, {lookuprange:grain})\r\n| summarize toint(avg(count_))",
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "91afaeb5-a96c-416c-8f57-5709abdffee9"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "35",
            "name": "parameters - 23"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "loadType": "always",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": ""
                  },
                  "name": "text - 2"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "## www.altra.org",
                          "style": "info"
                        },
                        "name": "text - 18"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), Action = action_s\r\n| summarize Requests = sum(Requests) by TimeGenerated, Action\r\n| order by TimeGenerated desc\r\n| {ChartType}",
                          "size": 1,
                          "title": "Overall Traffic Flow",
                          "exportedParameters": [
                            {
                              "fieldName": "series",
                              "parameterName": "overallseries",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "x",
                              "parameterName": "overalltime",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ],
                            "customThresholdLine": "{cmsoverallthresh}",
                            "customThresholdLineStyle": 1
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 16"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and TimeGenerated {lookuprange}\r\n| order by TimeGenerated desc\r\n| where host_s == \"www.altra.org\"\r\n| summarize count() by clientIP_s, ruleName_s\r\n| summarize arg_max(count_, *) by clientIP_s\r\n| project clientIP_s, count_\r\n| order by count_ desc\r\n| limit 10",
                          "size": 1,
                          "title": "Top 10 IP Addresses",
                          "exportedParameters": [
                            {
                              "fieldName": "y",
                              "parameterName": "overallcount",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "overallip",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 19"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where host_s == \"www.altra.org\"\r\n| where TimeGenerated {lookuprange}\r\n| summarize count() by action_s",
                          "size": 1,
                          "title": "Top Rule Hits",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ]
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 17"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Time: {overalltime}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Rule: {overallseries}",
                          "style": "upsell"
                        },
                        "conditionalVisibility": {
                          "parameterName": "overalltime",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 10"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected IP Address: {overallip}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Count: {overallcount}",
                          "style": "upsell"
                        },
                        "conditionalVisibility": {
                          "parameterName": "overallip",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 10 - Copy - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ "
                        },
                        "name": "text - 9"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Unknown\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bot300100\", \"Unknown Bots\", iff(['Rule Name'] contains \"Bot300200\", \"Attacking Bots\", iff(['Rule Name'] contains \"Bot300400\" or ['Rule Name'] contains \"Bot300500\", \"Monitoring Bots\", iff(['Rule Name'] contains \"Bot300300\", \"Dev Bots\", iff(['Rule Name'] contains \"Bot300600\", \"Suspicious Bots\", iff(['Rule Name'] contains \"Bot300700\", \"Other Bots\", \"Unspecified Rule\"))))))\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Good\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Good\", \"SEO Bots\", \"\")\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n)\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Bad\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bad\", \"Blocked Bots\", \"\")\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n)\r\n| order by TimeGenerated desc\r\n| {ChartType}",
                          "size": 1,
                          "title": "Bot Traffic Flow",
                          "exportedParameters": [
                            {
                              "fieldName": "x",
                              "parameterName": "bottime",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "botseries",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ],
                            "customThresholdLine": "{cmsbotthresh}",
                            "customThresholdLineStyle": 1
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 16 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and TimeGenerated {lookuprange}\r\n| order by TimeGenerated desc\r\n| where host_s == \"www.altra.org\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| summarize count() by clientIP_s, ruleName_s\r\n| summarize arg_max(count_, *) by clientIP_s\r\n| project clientIP_s, count_\r\n| order by count_ desc\r\n| limit 10",
                          "size": 1,
                          "title": "Top 10 Bot IP Addresses",
                          "exportedParameters": [
                            {
                              "fieldName": "y",
                              "parameterName": "botcount",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "botip",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 19 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Unknown\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bot300100\", \"Unknown Bots\", iff(['Rule Name'] contains \"Bot300200\", \"Attacking Bots\", iff(['Rule Name'] contains \"Bot300400\" or ['Rule Name'] contains \"Bot300500\", \"Monitoring Bots\", iff(['Rule Name'] contains \"Bot300300\", \"Dev Bots\", iff(['Rule Name'] contains \"Bot300600\", \"Suspicious Bots\", iff(['Rule Name'] contains \"Bot300700\", \"Other Bots\", \"Unspecified Rule\"))))))\r\n| summarize Requests = sum(Requests) by Rule\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Good\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Good\", \"SEO Bots\", \"\")\r\n| summarize Requests = sum(Requests) by Rule\r\n)\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Bad\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bad\", \"Blocked Bots\", \"\")\r\n| summarize Requests = sum(Requests) by Rule\r\n)",
                          "size": 1,
                          "title": "Top Bot Rule Hits",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ]
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 17 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Time: {bottime}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Bot Type: {botseries}",
                          "style": "upsell"
                        },
                        "conditionalVisibility": {
                          "parameterName": "bottime",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Bot IP Address: {botip}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ >> ‎Count: {botcount}",
                          "style": "upsell"
                        },
                        "conditionalVisibility": {
                          "parameterName": "botip",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ "
                        },
                        "name": "text - 16"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff([\"Rule Name\"] contains \"SQL\", \"SQL Injection\", iff([\"Rule Name\"] contains \"XSS\", \"Cross-Site Scripting\",iff([\"Rule Name\"] contains \"LFI\", \"Local File Inclusion \" ,iff([\"Rule Name\"] contains \"RFI\", \"Remote File Inclusion \" ,iff([\"Rule Name\"] contains \"PHP\", \"PHP Injection Attack \" ,iff([\"Rule Name\"] contains \"NODEJS\", \"Node.js Injection Attack \" , iff([\"Rule Name\"] contains \"JAVA\", \"Suspicious Java class\",iff([\"Rule Name\"] contains \"PROTOCOL-\", \"Protocol Attacks\",iff([\"Rule Name\"] contains \"FIX\", \"Session Fixation\",iff([\"Rule Name\"] contains \"WebShell\", \"Web-Shell Attack\",iff([\"Rule Name\"] contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff([\"Rule Name\"] contains \"99030002\", \"Path Traversal Evasion\",iff([\"Rule Name\"] contains \"RCE\" and [\"Rule Name\"] notcontains \"PROTOCOL\" and [\"Rule Name\"] notcontains \"METHOD\", \"Remote Code Execution\",iff([\"Rule Name\"] contains \"BLOCKING-\", \"Blocked Attacks\", iff([\"Rule Name\"] contains \"METHOD-ENFORCEMENT\", \"Method Attack\", \"Unspecified Rule\")))))))))))))))\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n| order by TimeGenerated desc\r\n| {ChartType}",
                          "size": 1,
                          "title": "Attack Traffic Flow",
                          "exportedParameters": [
                            {
                              "fieldName": "x",
                              "parameterName": "attacktime",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "attackseries",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showMetrics": false,
                            "customThresholdLine": "{cmsattackthresh}",
                            "customThresholdLineStyle": 1
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 17"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and TimeGenerated {lookuprange}\r\n| order by TimeGenerated desc\r\n| where host_s == \"www.altra.org\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| summarize count() by clientIP_s, ruleName_s\r\n| summarize arg_max(count_, *) by clientIP_s\r\n| project clientIP_s, count_\r\n| order by count_ desc\r\n| limit 10",
                          "size": 1,
                          "title": "Top 10 Attacking IP Addresses",
                          "exportedParameters": [
                            {
                              "fieldName": "y",
                              "parameterName": "attackcount",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "attackip",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 17 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff([\"Rule Name\"] contains \"SQL\", \"SQL Injection\", iff([\"Rule Name\"] contains \"XSS\", \"Cross-Site Scripting\",iff([\"Rule Name\"] contains \"LFI\", \"Local File Inclusion \" ,iff([\"Rule Name\"] contains \"RFI\", \"Remote File Inclusion \" ,iff([\"Rule Name\"] contains \"PHP\", \"PHP Injection Attack \" ,iff([\"Rule Name\"] contains \"NODEJS\", \"Node.js Injection Attack \" , iff([\"Rule Name\"] contains \"JAVA\", \"Suspicious Java class\",iff([\"Rule Name\"] contains \"PROTOCOL-\", \"Protocol Attacks\",iff([\"Rule Name\"] contains \"FIX\", \"Session Fixation\",iff([\"Rule Name\"] contains \"WebShell\", \"Web-Shell Attack\",iff([\"Rule Name\"] contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff([\"Rule Name\"] contains \"99030002\", \"Path Traversal Evasion\",iff([\"Rule Name\"] contains \"RCE\" and [\"Rule Name\"] notcontains \"PROTOCOL\" and [\"Rule Name\"] notcontains \"METHOD\", \"Remote Code Execution\",iff([\"Rule Name\"] contains \"BLOCKING-\", \"Blocked Attacks\", iff([\"Rule Name\"] contains \"METHOD-ENFORCEMENT\", \"Method Attack\", \"Unspecified Rule\")))))))))))))))\r\n| summarize Requests = sum(Requests) by Rule",
                          "size": 1,
                          "title": "Top Attacking Rule Hits",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 17 - Copy - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Time: {attacktime}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Attack Type: {attackseries}",
                          "style": "upsell"
                        },
                        "conditionalVisibility": {
                          "parameterName": "attacktime",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Attack IP Address: {attackip}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Count: {attackcount}",
                          "style": "upsell"
                        },
                        "conditionalVisibility": {
                          "parameterName": "attackip",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ "
                        },
                        "name": "text - 22"
                      }
                    ]
                  },
                  "name": "group - 23"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "## chatbot.altra.org",
                          "style": "info"
                        },
                        "name": "text - 18"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), Action = action_s\r\n| summarize Requests = sum(Requests) by TimeGenerated, Action\r\n| order by TimeGenerated desc\r\n| {ChartType}",
                          "size": 1,
                          "title": "Overall Traffic Flow",
                          "exportedParameters": [
                            {
                              "fieldName": "series",
                              "parameterName": "overallseries",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "x",
                              "parameterName": "overalltime",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ],
                            "customThresholdLine": "{cmschatoverallthresh}",
                            "customThresholdLineStyle": 1
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 16"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and TimeGenerated {lookuprange}\r\n| order by TimeGenerated desc\r\n| where host_s == \"chatbot.altra.org\"\r\n| summarize count() by clientIP_s, ruleName_s\r\n| summarize arg_max(count_, *) by clientIP_s\r\n| project clientIP_s, count_\r\n| order by count_ desc\r\n| limit 10",
                          "size": 1,
                          "title": "Top 10 IP Addresses",
                          "exportedParameters": [
                            {
                              "fieldName": "y",
                              "parameterName": "overallcount",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "overallip",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 19"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where host_s == \"chatbot.altra.org\"\r\n| where TimeGenerated {lookuprange}\r\n| summarize count() by action_s",
                          "size": 1,
                          "title": "Top Rule Hits",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ]
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 17"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Time: {overalltime}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Rule: {overallseries}",
                          "style": "upsell"
                        },
                        "conditionalVisibility": {
                          "parameterName": "overalltime",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 10"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected IP Address: {overallip}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Count: {overallcount}",
                          "style": "upsell"
                        },
                        "conditionalVisibility": {
                          "parameterName": "overallip",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 10 - Copy - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ "
                        },
                        "name": "text - 9"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Unknown\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bot300100\", \"Unknown Bots\", iff(['Rule Name'] contains \"Bot300200\", \"Attacking Bots\", iff(['Rule Name'] contains \"Bot300400\" or ['Rule Name'] contains \"Bot300500\", \"Monitoring Bots\", iff(['Rule Name'] contains \"Bot300300\", \"Dev Bots\", iff(['Rule Name'] contains \"Bot300600\", \"Suspicious Bots\", iff(['Rule Name'] contains \"Bot300700\", \"Other Bots\", \"Unspecified Rule\"))))))\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Good\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Good\", \"SEO Bots\", \"\")\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n)\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Bad\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bad\", \"Blocked Bots\", \"\")\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n)\r\n| order by TimeGenerated desc\r\n| {ChartType}",
                          "size": 1,
                          "title": "Bot Traffic Flow",
                          "exportedParameters": [
                            {
                              "fieldName": "x",
                              "parameterName": "bottime",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "botseries",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ],
                            "customThresholdLine": "{cmschatbotthresh}",
                            "customThresholdLineStyle": 1
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 16 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and TimeGenerated {lookuprange}\r\n| order by TimeGenerated desc\r\n| where host_s == \"chatbot.altra.org\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| summarize count() by clientIP_s, ruleName_s\r\n| summarize arg_max(count_, *) by clientIP_s\r\n| project clientIP_s, count_\r\n| order by count_ desc\r\n| limit 10",
                          "size": 1,
                          "title": "Top 10 Bot IP Addresses",
                          "exportedParameters": [
                            {
                              "fieldName": "y",
                              "parameterName": "botcount",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "botip",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 19 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Unknown\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bot300100\", \"Unknown Bots\", iff(['Rule Name'] contains \"Bot300200\", \"Attacking Bots\", iff(['Rule Name'] contains \"Bot300400\" or ['Rule Name'] contains \"Bot300500\", \"Monitoring Bots\", iff(['Rule Name'] contains \"Bot300300\", \"Dev Bots\", iff(['Rule Name'] contains \"Bot300600\", \"Suspicious Bots\", iff(['Rule Name'] contains \"Bot300700\", \"Other Bots\", \"Unspecified Rule\"))))))\r\n| summarize Requests = sum(Requests) by Rule\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Good\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Good\", \"SEO Bots\", \"\")\r\n| summarize Requests = sum(Requests) by Rule\r\n)\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Bad\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bad\", \"Blocked Bots\", \"\")\r\n| summarize Requests = sum(Requests) by Rule\r\n)",
                          "size": 1,
                          "title": "Top Bot Rule Hits",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ]
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 17 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Time: {bottime}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Bot Type: {botseries}",
                          "style": "upsell"
                        },
                        "conditionalVisibility": {
                          "parameterName": "bottime",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Bot IP Address: {botip}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ >> ‎Count: {botcount}",
                          "style": "upsell"
                        },
                        "conditionalVisibility": {
                          "parameterName": "botip",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ "
                        },
                        "name": "text - 16"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff([\"Rule Name\"] contains \"SQL\", \"SQL Injection\", iff([\"Rule Name\"] contains \"XSS\", \"Cross-Site Scripting\",iff([\"Rule Name\"] contains \"LFI\", \"Local File Inclusion \" ,iff([\"Rule Name\"] contains \"RFI\", \"Remote File Inclusion \" ,iff([\"Rule Name\"] contains \"PHP\", \"PHP Injection Attack \" ,iff([\"Rule Name\"] contains \"NODEJS\", \"Node.js Injection Attack \" , iff([\"Rule Name\"] contains \"JAVA\", \"Suspicious Java class\",iff([\"Rule Name\"] contains \"PROTOCOL-\", \"Protocol Attacks\",iff([\"Rule Name\"] contains \"FIX\", \"Session Fixation\",iff([\"Rule Name\"] contains \"WebShell\", \"Web-Shell Attack\",iff([\"Rule Name\"] contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff([\"Rule Name\"] contains \"99030002\", \"Path Traversal Evasion\",iff([\"Rule Name\"] contains \"RCE\" and [\"Rule Name\"] notcontains \"PROTOCOL\" and [\"Rule Name\"] notcontains \"METHOD\", \"Remote Code Execution\",iff([\"Rule Name\"] contains \"BLOCKING-\", \"Blocked Attacks\", iff([\"Rule Name\"] contains \"METHOD-ENFORCEMENT\", \"Method Attack\", \"Unspecified Rule\")))))))))))))))\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n| order by TimeGenerated desc\r\n| {ChartType}",
                          "size": 1,
                          "title": "Attack Traffic Flow",
                          "exportedParameters": [
                            {
                              "fieldName": "x",
                              "parameterName": "attacktime",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "attackseries",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showMetrics": false,
                            "customThresholdLine": "{cmschatattackthresh}",
                            "customThresholdLineStyle": 1
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 17"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and TimeGenerated {lookuprange}\r\n| order by TimeGenerated desc\r\n| where host_s == \"chatbot.altra.org\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| summarize count() by clientIP_s, ruleName_s\r\n| summarize arg_max(count_, *) by clientIP_s\r\n| project clientIP_s, count_\r\n| order by count_ desc\r\n| limit 10",
                          "size": 1,
                          "title": "Top 10 Attacking IP Addresses",
                          "exportedParameters": [
                            {
                              "fieldName": "y",
                              "parameterName": "attackcount",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "attackip",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 17 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff([\"Rule Name\"] contains \"SQL\", \"SQL Injection\", iff([\"Rule Name\"] contains \"XSS\", \"Cross-Site Scripting\",iff([\"Rule Name\"] contains \"LFI\", \"Local File Inclusion \" ,iff([\"Rule Name\"] contains \"RFI\", \"Remote File Inclusion \" ,iff([\"Rule Name\"] contains \"PHP\", \"PHP Injection Attack \" ,iff([\"Rule Name\"] contains \"NODEJS\", \"Node.js Injection Attack \" , iff([\"Rule Name\"] contains \"JAVA\", \"Suspicious Java class\",iff([\"Rule Name\"] contains \"PROTOCOL-\", \"Protocol Attacks\",iff([\"Rule Name\"] contains \"FIX\", \"Session Fixation\",iff([\"Rule Name\"] contains \"WebShell\", \"Web-Shell Attack\",iff([\"Rule Name\"] contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff([\"Rule Name\"] contains \"99030002\", \"Path Traversal Evasion\",iff([\"Rule Name\"] contains \"RCE\" and [\"Rule Name\"] notcontains \"PROTOCOL\" and [\"Rule Name\"] notcontains \"METHOD\", \"Remote Code Execution\",iff([\"Rule Name\"] contains \"BLOCKING-\", \"Blocked Attacks\", iff([\"Rule Name\"] contains \"METHOD-ENFORCEMENT\", \"Method Attack\", \"Unspecified Rule\")))))))))))))))\r\n| summarize Requests = sum(Requests) by Rule",
                          "size": 1,
                          "title": "Top Attacking Rule Hits",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "name": "query - 17 - Copy - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Time: {attacktime}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Attack Type: {attackseries}",
                          "style": "upsell"
                        },
                        "conditionalVisibility": {
                          "parameterName": "attacktime",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Attack IP Address: {attackip}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Count: {attackcount}",
                          "style": "upsell"
                        },
                        "conditionalVisibility": {
                          "parameterName": "attackip",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ "
                        },
                        "name": "text - 22"
                      }
                    ]
                  },
                  "name": "group - 23"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "viewmode",
              "comparison": "isEqualTo",
              "value": "all"
            },
            "name": "group - 25"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "loadType": "always",
              "items": [
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "eadc81a6-ffbe-4152-8446-09b598729288",
                        "version": "KqlParameterItem/1.0",
                        "name": "cmsauto",
                        "type": 1,
                        "isRequired": true,
                        "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and policy_s == \"ALTRAPRODWAF\"\r\n| where host_s == \"www.altra.org\"\r\n| where action_s != \"Allow\" and action_s != \"Block\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| where TimeGenerated > {lookuprange:start}\r\n| summarize count() by bin(TimeGenerated, 15m), action_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and policy_s == \"ALTRAPRODWAF\"\r\n| where host_s == \"www.altra.org\"\r\n| where action_s != \"Allow\" and action_s != \"Block\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| where TimeGenerated < {lookuprange:start} and TimeGenerated > datetime_add('day', -30, {lookuprange:start})\r\n| summarize count() by bin(TimeGenerated, 15m), action_s\r\n| summarize toint(avg(count_)) by action_s\r\n) on action_s\r\n| extend category = \"bot\"\r\n| order by TimeGenerated desc\r\n| take 2\r\n| order by TimeGenerated asc\r\n| take 1\r\n| union (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and policy_s == \"ALTRAPRODWAF\"\r\n| where host_s == \"www.altra.org\"\r\n| where action_s != \"Allow\" and action_s != \"Block\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\"\r\n| where TimeGenerated > {lookuprange:start}\r\n| summarize count() by bin(TimeGenerated, 15m), action_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and policy_s == \"ALTRAPRODWAF\"\r\n| where host_s == \"www.altra.org\"\r\n| where action_s != \"Allow\" and action_s != \"Block\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\"\r\n| where TimeGenerated < {lookuprange:start} and TimeGenerated > datetime_add('day', -30, {lookuprange:start})\r\n| summarize count() by bin(TimeGenerated, 15m), action_s\r\n| summarize toint(avg(count_)) by action_s\r\n) on action_s\r\n| extend category = \"attack\"\r\n| order by TimeGenerated desc\r\n| take 2\r\n| order by TimeGenerated asc\r\n| take 1)\r\n| where count_ > avg_count_\r\n| order by count_ desc\r\n| take 1\r\n| project category\r\n\r\n",
                        "isHiddenWhenLocked": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces"
                      },
                      {
                        "version": "KqlParameterItem/1.0",
                        "name": "cmschatbotauto",
                        "type": 1,
                        "isRequired": true,
                        "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and policy_s == \"ALTRAPRODWAF\"\r\n| where host_s == \"chatbot.altra.org\"\r\n| where action_s != \"Allow\" and action_s != \"Block\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| where TimeGenerated > {lookuprange:start}\r\n| summarize count() by bin(TimeGenerated, 15m), action_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and policy_s == \"ALTRAPRODWAF\"\r\n| where host_s == \"chatbot.altra.org\"\r\n| where action_s != \"Allow\" and action_s != \"Block\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| where TimeGenerated < {lookuprange:start} and TimeGenerated > datetime_add('day', -30, {lookuprange:start})\r\n| summarize count() by bin(TimeGenerated, 15m), action_s\r\n| summarize toint(avg(count_)) by action_s\r\n) on action_s\r\n| extend category = \"bot\"\r\n| order by TimeGenerated desc\r\n| take 2\r\n| order by TimeGenerated asc\r\n| take 1\r\n| union (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and policy_s == \"ALTRAPRODWAF\"\r\n| where host_s == \"chatbot.altra.org\"\r\n| where action_s != \"Allow\" and action_s != \"Block\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\"\r\n| where TimeGenerated > {lookuprange:start}\r\n| summarize count() by bin(TimeGenerated, 15m), action_s\r\n| join kind = leftouter(\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and policy_s == \"ALTRAPRODWAF\"\r\n| where host_s == \"chatbot.altra.org\"\r\n| where action_s != \"Allow\" and action_s != \"Block\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\"\r\n| where TimeGenerated < {lookuprange:start} and TimeGenerated > datetime_add('day', -30, {lookuprange:start})\r\n| summarize count() by bin(TimeGenerated, 15m), action_s\r\n| summarize toint(avg(count_)) by action_s\r\n) on action_s\r\n| extend category = \"attack\"\r\n| order by TimeGenerated desc\r\n| take 2\r\n| order by TimeGenerated asc\r\n| take 1)\r\n| where count_ > avg_count_\r\n| order by count_ desc\r\n| take 1\r\n| project category\r\n\r\n",
                        "isHiddenWhenLocked": true,
                        "queryType": 0,
                        "resourceType": "microsoft.operationalinsights/workspaces",
                        "id": "2c9fad5c-8975-40ac-b8c3-9f4f040c2a2e"
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 2"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "## www.altra.org",
                          "style": "info"
                        },
                        "name": "text - 18"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Suspicious bot activity was comparitively higher in the last 15 Minutes",
                          "style": "warning"
                        },
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo",
                          "value": "bot"
                        },
                        "name": "text - 19"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Suspicious attacker activity was comparitively higher in the last 15 Minutes",
                          "style": "warning"
                        },
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo",
                          "value": "attack"
                        },
                        "name": "text - 19 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), Action = action_s\r\n| summarize Requests = sum(Requests) by TimeGenerated, Action\r\n| order by TimeGenerated desc\r\n| {ChartType}",
                          "size": 1,
                          "title": "Overall Traffic Flow",
                          "exportedParameters": [
                            {
                              "fieldName": "series",
                              "parameterName": "overallseries",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "x",
                              "parameterName": "overalltime",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ],
                            "customThresholdLine": "{cmsoverallthresh}",
                            "customThresholdLineStyle": 1
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo"
                        },
                        "name": "query - 16"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and TimeGenerated {lookuprange}\r\n| order by TimeGenerated desc\r\n| where host_s == \"www.altra.org\"\r\n| summarize count() by clientIP_s, ruleName_s\r\n| summarize arg_max(count_, *) by clientIP_s\r\n| project clientIP_s, count_\r\n| order by count_ desc\r\n| limit 10",
                          "size": 1,
                          "title": "Top 10 IP Addresses",
                          "exportedParameters": [
                            {
                              "fieldName": "y",
                              "parameterName": "overallcount",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "overallip",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo"
                        },
                        "name": "query - 19"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where host_s == \"www.altra.org\"\r\n| where TimeGenerated {lookuprange}\r\n| summarize count() by action_s",
                          "size": 1,
                          "title": "Top Rule Hits",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ]
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo"
                        },
                        "name": "query - 17"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Time: {overalltime}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Rule: {overallseries}",
                          "style": "upsell"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "overalltime",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "cmsauto",
                            "comparison": "isEqualTo"
                          }
                        ],
                        "name": "text - 10"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected IP Address: {overallip}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Count: {overallcount}",
                          "style": "upsell"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "overallip",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "cmsauto",
                            "comparison": "isEqualTo"
                          }
                        ],
                        "name": "text - 10 - Copy - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "‎ ‎ ‎ ‎ ‎ ‎ "
                        },
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo"
                        },
                        "name": "text - 9"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Unknown\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bot300100\", \"Unknown Bots\", iff(['Rule Name'] contains \"Bot300200\", \"Attacking Bots\", iff(['Rule Name'] contains \"Bot300400\" or ['Rule Name'] contains \"Bot300500\", \"Monitoring Bots\", iff(['Rule Name'] contains \"Bot300300\", \"Dev Bots\", iff(['Rule Name'] contains \"Bot300600\", \"Suspicious Bots\", iff(['Rule Name'] contains \"Bot300700\", \"Other Bots\", \"Unspecified Rule\"))))))\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Good\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Good\", \"SEO Bots\", \"\")\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n)\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Bad\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bad\", \"Blocked Bots\", \"\")\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n)\r\n| order by TimeGenerated desc\r\n| {ChartType}",
                          "size": 1,
                          "title": "Bot Traffic Flow",
                          "exportedParameters": [
                            {
                              "fieldName": "x",
                              "parameterName": "bottime",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "botseries",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ],
                            "customThresholdLine": "{cmsbotthresh}",
                            "customThresholdLineStyle": 1
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo",
                          "value": "bot"
                        },
                        "name": "query - 16 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and TimeGenerated {lookuprange}\r\n| order by TimeGenerated desc\r\n| where host_s == \"www.altra.org\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| summarize count() by clientIP_s, ruleName_s\r\n| summarize arg_max(count_, *) by clientIP_s\r\n| project clientIP_s, count_\r\n| order by count_ desc\r\n| limit 10",
                          "size": 1,
                          "title": "Top 10 Bot IP Addresses",
                          "exportedParameters": [
                            {
                              "fieldName": "y",
                              "parameterName": "botcount",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "botip",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo",
                          "value": "bot"
                        },
                        "name": "query - 19 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Unknown\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bot300100\", \"Unknown Bots\", iff(['Rule Name'] contains \"Bot300200\", \"Attacking Bots\", iff(['Rule Name'] contains \"Bot300400\" or ['Rule Name'] contains \"Bot300500\", \"Monitoring Bots\", iff(['Rule Name'] contains \"Bot300300\", \"Dev Bots\", iff(['Rule Name'] contains \"Bot300600\", \"Suspicious Bots\", iff(['Rule Name'] contains \"Bot300700\", \"Other Bots\", \"Unspecified Rule\"))))))\r\n| summarize Requests = sum(Requests) by Rule\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Good\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Good\", \"SEO Bots\", \"\")\r\n| summarize Requests = sum(Requests) by Rule\r\n)\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Bad\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bad\", \"Blocked Bots\", \"\")\r\n| summarize Requests = sum(Requests) by Rule\r\n)",
                          "size": 1,
                          "title": "Top Bot Rule Hits",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ]
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo",
                          "value": "bot"
                        },
                        "name": "query - 17 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Time: {bottime}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Bot Type: {botseries}",
                          "style": "upsell"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "bottime",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "cmsauto",
                            "comparison": "isEqualTo",
                            "value": "bot"
                          }
                        ],
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Bot IP Address: {botip}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ >> ‎Count: {botcount}",
                          "style": "upsell"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "botip",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "cmsauto",
                            "comparison": "isEqualTo",
                            "value": "bot"
                          }
                        ],
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "‎ ‎ ‎ ‎ ‎ ‎ "
                        },
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo",
                          "value": "bot"
                        },
                        "name": "text - 16"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff([\"Rule Name\"] contains \"SQL\", \"SQL Injection\", iff([\"Rule Name\"] contains \"XSS\", \"Cross-Site Scripting\",iff([\"Rule Name\"] contains \"LFI\", \"Local File Inclusion \" ,iff([\"Rule Name\"] contains \"RFI\", \"Remote File Inclusion \" ,iff([\"Rule Name\"] contains \"PHP\", \"PHP Injection Attack \" ,iff([\"Rule Name\"] contains \"NODEJS\", \"Node.js Injection Attack \" , iff([\"Rule Name\"] contains \"JAVA\", \"Suspicious Java class\",iff([\"Rule Name\"] contains \"PROTOCOL-\", \"Protocol Attacks\",iff([\"Rule Name\"] contains \"FIX\", \"Session Fixation\",iff([\"Rule Name\"] contains \"WebShell\", \"Web-Shell Attack\",iff([\"Rule Name\"] contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff([\"Rule Name\"] contains \"99030002\", \"Path Traversal Evasion\",iff([\"Rule Name\"] contains \"RCE\" and [\"Rule Name\"] notcontains \"PROTOCOL\" and [\"Rule Name\"] notcontains \"METHOD\", \"Remote Code Execution\",iff([\"Rule Name\"] contains \"BLOCKING-\", \"Blocked Attacks\", iff([\"Rule Name\"] contains \"METHOD-ENFORCEMENT\", \"Method Attack\", \"Unspecified Rule\")))))))))))))))\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n| order by TimeGenerated desc\r\n| {ChartType}",
                          "size": 1,
                          "title": "Attack Traffic Flow",
                          "exportedParameters": [
                            {
                              "fieldName": "x",
                              "parameterName": "attacktime",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "attackseries",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showMetrics": false,
                            "customThresholdLine": "{cmsattackthresh}",
                            "customThresholdLineStyle": 1
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo",
                          "value": "attack"
                        },
                        "name": "query - 17"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and TimeGenerated {lookuprange}\r\n| order by TimeGenerated desc\r\n| where host_s == \"www.altra.org\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| summarize count() by clientIP_s, ruleName_s\r\n| summarize arg_max(count_, *) by clientIP_s\r\n| project clientIP_s, count_\r\n| order by count_ desc\r\n| limit 10",
                          "size": 1,
                          "title": "Top 10 Attacking IP Addresses",
                          "exportedParameters": [
                            {
                              "fieldName": "y",
                              "parameterName": "attackcount",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "attackip",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo",
                          "value": "attack"
                        },
                        "name": "query - 17 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"www.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff([\"Rule Name\"] contains \"SQL\", \"SQL Injection\", iff([\"Rule Name\"] contains \"XSS\", \"Cross-Site Scripting\",iff([\"Rule Name\"] contains \"LFI\", \"Local File Inclusion \" ,iff([\"Rule Name\"] contains \"RFI\", \"Remote File Inclusion \" ,iff([\"Rule Name\"] contains \"PHP\", \"PHP Injection Attack \" ,iff([\"Rule Name\"] contains \"NODEJS\", \"Node.js Injection Attack \" , iff([\"Rule Name\"] contains \"JAVA\", \"Suspicious Java class\",iff([\"Rule Name\"] contains \"PROTOCOL-\", \"Protocol Attacks\",iff([\"Rule Name\"] contains \"FIX\", \"Session Fixation\",iff([\"Rule Name\"] contains \"WebShell\", \"Web-Shell Attack\",iff([\"Rule Name\"] contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff([\"Rule Name\"] contains \"99030002\", \"Path Traversal Evasion\",iff([\"Rule Name\"] contains \"RCE\" and [\"Rule Name\"] notcontains \"PROTOCOL\" and [\"Rule Name\"] notcontains \"METHOD\", \"Remote Code Execution\",iff([\"Rule Name\"] contains \"BLOCKING-\", \"Blocked Attacks\", iff([\"Rule Name\"] contains \"METHOD-ENFORCEMENT\", \"Method Attack\", \"Unspecified Rule\")))))))))))))))\r\n| summarize Requests = sum(Requests) by Rule",
                          "size": 1,
                          "title": "Top Attacking Rule Hits",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo",
                          "value": "attack"
                        },
                        "name": "query - 17 - Copy - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Time: {attacktime}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Attack Type: {attackseries}",
                          "style": "upsell"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "attacktime",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "cmsauto",
                            "comparison": "isEqualTo",
                            "value": "attack"
                          }
                        ],
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Attack IP Address: {attackip}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Count: {attackcount}",
                          "style": "upsell"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "attackip",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "cmsauto",
                            "comparison": "isEqualTo",
                            "value": "attack"
                          }
                        ],
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "‎ ‎ ‎ ‎ ‎ ‎ "
                        },
                        "conditionalVisibility": {
                          "parameterName": "cmsauto",
                          "comparison": "isEqualTo",
                          "value": "attack"
                        },
                        "name": "text - 22"
                      }
                    ]
                  },
                  "name": "group - 23"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "## chatbot.altra.org",
                          "style": "info"
                        },
                        "name": "text - 18"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Suspicious bot activity was comparitively higher in the last 15 Minutes",
                          "style": "warning"
                        },
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo",
                          "value": "bot"
                        },
                        "name": "text - 19 - Copy - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "#### Suspicious attacker activity was comparitively higher in the last 15 Minutes",
                          "style": "warning"
                        },
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo",
                          "value": "attack"
                        },
                        "name": "text - 19 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), Action = action_s\r\n| summarize Requests = sum(Requests) by TimeGenerated, Action\r\n| order by TimeGenerated desc\r\n| {ChartType}",
                          "size": 1,
                          "title": "Overall Traffic Flow",
                          "exportedParameters": [
                            {
                              "fieldName": "series",
                              "parameterName": "overallseries",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "x",
                              "parameterName": "overalltime",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ],
                            "customThresholdLine": "{cmschatoverallthresh}",
                            "customThresholdLineStyle": 1
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo"
                        },
                        "name": "query - 16"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and TimeGenerated {lookuprange}\r\n| order by TimeGenerated desc\r\n| where host_s == \"chatbot.altra.org\"\r\n| summarize count() by clientIP_s, ruleName_s\r\n| summarize arg_max(count_, *) by clientIP_s\r\n| project clientIP_s, count_\r\n| order by count_ desc\r\n| limit 10",
                          "size": 1,
                          "title": "Top 10 IP Addresses",
                          "exportedParameters": [
                            {
                              "fieldName": "y",
                              "parameterName": "overallcount",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "overallip",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo"
                        },
                        "name": "query - 19"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where host_s == \"chatbot.altra.org\"\r\n| where TimeGenerated {lookuprange}\r\n| summarize count() by action_s",
                          "size": 1,
                          "title": "Top Rule Hits",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ]
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo"
                        },
                        "name": "query - 17"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Time: {overalltime}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Rule: {overallseries}",
                          "style": "upsell"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "overalltime",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "cmschatbotauto",
                            "comparison": "isEqualTo"
                          }
                        ],
                        "name": "text - 10"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected IP Address: {overallip}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Count: {overallcount}",
                          "style": "upsell"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "overallip",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "cmschatbotauto",
                            "comparison": "isEqualTo"
                          }
                        ],
                        "name": "text - 10 - Copy - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "‎ ‎ ‎ ‎ ‎ ‎ "
                        },
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo"
                        },
                        "name": "text - 9"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Unknown\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bot300100\", \"Unknown Bots\", iff(['Rule Name'] contains \"Bot300200\", \"Attacking Bots\", iff(['Rule Name'] contains \"Bot300400\" or ['Rule Name'] contains \"Bot300500\", \"Monitoring Bots\", iff(['Rule Name'] contains \"Bot300300\", \"Dev Bots\", iff(['Rule Name'] contains \"Bot300600\", \"Suspicious Bots\", iff(['Rule Name'] contains \"Bot300700\", \"Other Bots\", \"Unspecified Rule\"))))))\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Good\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Good\", \"SEO Bots\", \"\")\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n)\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Bad\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bad\", \"Blocked Bots\", \"\")\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n)\r\n| order by TimeGenerated desc\r\n| {ChartType}",
                          "size": 1,
                          "title": "Bot Traffic Flow",
                          "exportedParameters": [
                            {
                              "fieldName": "x",
                              "parameterName": "bottime",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "botseries",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ],
                            "customThresholdLine": "{cmschatbotthresh}",
                            "customThresholdLineStyle": 1
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo",
                          "value": "bot"
                        },
                        "name": "query - 16 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and TimeGenerated {lookuprange}\r\n| order by TimeGenerated desc\r\n| where host_s == \"chatbot.altra.org\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| summarize count() by clientIP_s, ruleName_s\r\n| summarize arg_max(count_, *) by clientIP_s\r\n| project clientIP_s, count_\r\n| order by count_ desc\r\n| limit 10",
                          "size": 1,
                          "title": "Top 10 Bot IP Addresses",
                          "exportedParameters": [
                            {
                              "fieldName": "y",
                              "parameterName": "botcount",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "botip",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo",
                          "value": "bot"
                        },
                        "name": "query - 19 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Unknown\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bot300100\", \"Unknown Bots\", iff(['Rule Name'] contains \"Bot300200\", \"Attacking Bots\", iff(['Rule Name'] contains \"Bot300400\" or ['Rule Name'] contains \"Bot300500\", \"Monitoring Bots\", iff(['Rule Name'] contains \"Bot300300\", \"Dev Bots\", iff(['Rule Name'] contains \"Bot300600\", \"Suspicious Bots\", iff(['Rule Name'] contains \"Bot300700\", \"Other Bots\", \"Unspecified Rule\"))))))\r\n| summarize Requests = sum(Requests) by Rule\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Good\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Good\", \"SEO Bots\", \"\")\r\n| summarize Requests = sum(Requests) by Rule\r\n)\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Bad\"\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bad\", \"Blocked Bots\", \"\")\r\n| summarize Requests = sum(Requests) by Rule\r\n)",
                          "size": 1,
                          "title": "Top Bot Rule Hits",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false,
                            "seriesLabelSettings": [
                              {
                                "seriesName": "Allow",
                                "color": "green"
                              },
                              {
                                "seriesName": "Log",
                                "color": "yellow"
                              },
                              {
                                "seriesName": "AnomalyScoring",
                                "color": "orange"
                              },
                              {
                                "seriesName": "Block",
                                "color": "redBright"
                              }
                            ]
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo",
                          "value": "bot"
                        },
                        "name": "query - 17 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Time: {bottime}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Bot Type: {botseries}",
                          "style": "upsell"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "bottime",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "cmschatbotauto",
                            "comparison": "isEqualTo",
                            "value": "bot"
                          }
                        ],
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Bot IP Address: {botip}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ >> ‎Count: {botcount}",
                          "style": "upsell"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "botip",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "cmschatbotauto",
                            "comparison": "isEqualTo",
                            "value": "bot"
                          }
                        ],
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "‎ ‎ ‎ ‎ ‎ ‎ "
                        },
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo",
                          "value": "bot"
                        },
                        "name": "text - 16"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff([\"Rule Name\"] contains \"SQL\", \"SQL Injection\", iff([\"Rule Name\"] contains \"XSS\", \"Cross-Site Scripting\",iff([\"Rule Name\"] contains \"LFI\", \"Local File Inclusion \" ,iff([\"Rule Name\"] contains \"RFI\", \"Remote File Inclusion \" ,iff([\"Rule Name\"] contains \"PHP\", \"PHP Injection Attack \" ,iff([\"Rule Name\"] contains \"NODEJS\", \"Node.js Injection Attack \" , iff([\"Rule Name\"] contains \"JAVA\", \"Suspicious Java class\",iff([\"Rule Name\"] contains \"PROTOCOL-\", \"Protocol Attacks\",iff([\"Rule Name\"] contains \"FIX\", \"Session Fixation\",iff([\"Rule Name\"] contains \"WebShell\", \"Web-Shell Attack\",iff([\"Rule Name\"] contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff([\"Rule Name\"] contains \"99030002\", \"Path Traversal Evasion\",iff([\"Rule Name\"] contains \"RCE\" and [\"Rule Name\"] notcontains \"PROTOCOL\" and [\"Rule Name\"] notcontains \"METHOD\", \"Remote Code Execution\",iff([\"Rule Name\"] contains \"BLOCKING-\", \"Blocked Attacks\", iff([\"Rule Name\"] contains \"METHOD-ENFORCEMENT\", \"Method Attack\", \"Unspecified Rule\")))))))))))))))\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n| order by TimeGenerated desc\r\n| {ChartType}",
                          "size": 1,
                          "title": "Attack Traffic Flow",
                          "exportedParameters": [
                            {
                              "fieldName": "x",
                              "parameterName": "attacktime",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "attackseries",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "chartSettings": {
                            "showMetrics": false,
                            "customThresholdLine": "{cmschatattackthresh}",
                            "customThresholdLineStyle": 1
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo",
                          "value": "attack"
                        },
                        "name": "query - 17"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\" and TimeGenerated {lookuprange}\r\n| order by TimeGenerated desc\r\n| where host_s == \"chatbot.altra.org\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| summarize count() by clientIP_s, ruleName_s\r\n| summarize arg_max(count_, *) by clientIP_s\r\n| project clientIP_s, count_\r\n| order by count_ desc\r\n| limit 10",
                          "size": 1,
                          "title": "Top 10 Attacking IP Addresses",
                          "exportedParameters": [
                            {
                              "fieldName": "y",
                              "parameterName": "attackcount",
                              "parameterType": 1
                            },
                            {
                              "fieldName": "series",
                              "parameterName": "attackip",
                              "parameterType": 1
                            }
                          ],
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo",
                          "value": "attack"
                        },
                        "name": "query - 17 - Copy"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {lookuprange}\r\n| where host_s == \"chatbot.altra.org\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| summarize Requests = count() by bin(TimeGenerated, {lookuprange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff([\"Rule Name\"] contains \"SQL\", \"SQL Injection\", iff([\"Rule Name\"] contains \"XSS\", \"Cross-Site Scripting\",iff([\"Rule Name\"] contains \"LFI\", \"Local File Inclusion \" ,iff([\"Rule Name\"] contains \"RFI\", \"Remote File Inclusion \" ,iff([\"Rule Name\"] contains \"PHP\", \"PHP Injection Attack \" ,iff([\"Rule Name\"] contains \"NODEJS\", \"Node.js Injection Attack \" , iff([\"Rule Name\"] contains \"JAVA\", \"Suspicious Java class\",iff([\"Rule Name\"] contains \"PROTOCOL-\", \"Protocol Attacks\",iff([\"Rule Name\"] contains \"FIX\", \"Session Fixation\",iff([\"Rule Name\"] contains \"WebShell\", \"Web-Shell Attack\",iff([\"Rule Name\"] contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff([\"Rule Name\"] contains \"99030002\", \"Path Traversal Evasion\",iff([\"Rule Name\"] contains \"RCE\" and [\"Rule Name\"] notcontains \"PROTOCOL\" and [\"Rule Name\"] notcontains \"METHOD\", \"Remote Code Execution\",iff([\"Rule Name\"] contains \"BLOCKING-\", \"Blocked Attacks\", iff([\"Rule Name\"] contains \"METHOD-ENFORCEMENT\", \"Method Attack\", \"Unspecified Rule\")))))))))))))))\r\n| summarize Requests = sum(Requests) by Rule",
                          "size": 1,
                          "title": "Top Attacking Rule Hits",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "customWidth": "33",
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo",
                          "value": "attack"
                        },
                        "name": "query - 17 - Copy - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Time: {attacktime}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Attack Type: {attackseries}",
                          "style": "upsell"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "attacktime",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "cmschatbotauto",
                            "comparison": "isEqualTo",
                            "value": "attack"
                          }
                        ],
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "###### >> Selected Attack IP Address: {attackip}‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎ ‎>> Count: {attackcount}",
                          "style": "upsell"
                        },
                        "conditionalVisibilities": [
                          {
                            "parameterName": "attackip",
                            "comparison": "isNotEqualTo"
                          },
                          {
                            "parameterName": "cmschatbotauto",
                            "comparison": "isEqualTo",
                            "value": "attack"
                          }
                        ],
                        "name": "text - 10 - Copy"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "‎ ‎ ‎ ‎ ‎ ‎ "
                        },
                        "conditionalVisibility": {
                          "parameterName": "cmschatbotauto",
                          "comparison": "isEqualTo",
                          "value": "attack"
                        },
                        "name": "text - 22"
                      }
                    ]
                  },
                  "name": "group - 23"
                }
              ]
            },
            "conditionalVisibility": {
              "parameterName": "viewmode",
              "comparison": "isEqualTo",
              "value": "auto"
            },
            "name": "group - 25"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "dashboard"
      },
      "name": "group - 6"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Help!\r\n### > Control Options <\r\n\r\n|Control|Description|\r\n|---|---|\r\n|Time Range|The time span over which the monitoring or investigation is conducted.|\r\n|Chart Type|Used to select the type of chart used for monitoring graph events.|\r\n|Site|The site that we have chosen to monitor or investigate.|\r\n\r\n### > Glossary <\r\n\r\n|Term|Description|\r\n|---|---|\r\n|Total Network Requests|The total of all individual requests sent by all hosts|\r\n|Total Session Count|The total number of sessions. The same hosts may appear with a different session in this case, which also counts.|\r\n|Risky Requests|The sum of all individual requests sent by Blocked and Suspicious hosts identified by Microsoft's Threat Intelligence.|\r\n|Blocked Requests|The sum of all individual requests sent by only Blocked Hosts.|\r\n|Allow|Allowed Requests|\r\n|Log|Requests that are flagged by Microsoft's Threat Intelligence, but are allowed by the Admin using Microsoft's Managed Ruleset.|\r\n|AnomalyScoring|Requests that have been flagged as suspicious by Microsoft's Threat Intelligence. Any malicious activity attempted by the host will result in its blocking.|\r\n|Block|Blocked Requests|\r\n\r\n### > Features <\r\n\r\n|Feature|Description|\r\n|---|---|\r\n|Search by Time Range|This allows you to search through your logs within the specified time frame. The graph requires two controls, one for Time Range and one for Granularity. The Logs shown below the graph require only one control to function, which is the Time Range.|\r\n|Search by Time Range with Brush|You can use a brush to narrow down your search results by selecting a specific time interval within the graph. Hold down the left mouse button at the desired start time and release when the desired end time has arrived. The logs below the graph will display a more refined output based on the time range specified by the user in the graph.|\r\n|Search by Action Category|The right side of the graph displays a selectable legend, allowing you to choose the category of actions you want to investigate and view logs accordingly below.|\r\n|Search by both Time Brush and Action Category|To get a more specific result, combine the Time Brush function of the graph with the Action Categories from the graph legend.|\r\n|Search by Search bar|To narrow your search results, use the search bar above the logs table.|",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "text - 5"
          },
          {
            "type": 1,
            "content": {
              "json": "---"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "text - 6"
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 8"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "78fb6ab8-8441-45d5-99ca-6af4cb30d562",
                  "version": "KqlParameterItem/1.0",
                  "name": "TotalNetworkCount",
                  "label": "Total Network Requests",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| summarize [\"Total Network Requests\"] = count()",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "64a45dd2-ea9b-4ff1-8438-2416d5a02015",
                  "version": "KqlParameterItem/1.0",
                  "name": "UniqueNetworkSession",
                  "label": "Total Session Count",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| summarize count() by clientIP_s\r\n| count",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "6c728cd8-a9fd-4c0d-a92b-36509e5ddb74",
                  "version": "KqlParameterItem/1.0",
                  "name": "RiskyRequests",
                  "label": "Risky Requests",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where action_s == \"AnomalyScoring\" or action_s == \"Block\"\r\n| summarize [\"Total Bot Requests\"] = count()\r\n| extend [\"Total Bot Requests\"] = iff(tostring(['Total Bot Requests']) == \"\",\"0\", tostring(['Total Bot Requests']))",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "b78d7570-f7d1-43cd-b481-29902017201a",
                  "version": "KqlParameterItem/1.0",
                  "name": "BlockedCount",
                  "label": "Blocked Requests",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where action_s == \"Block\"\r\n| summarize [\"Total Bot Requests\"] = count()\r\n| extend [\"Total Bot Requests\"] = iff(tostring(['Total Bot Requests']) == \"\",\"0\", tostring(['Total Bot Requests']))",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "d95789f4-2c78-49d0-ab0d-0d4a7a702287",
                  "version": "KqlParameterItem/1.0",
                  "name": "threshold",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > datetime_add('day', -30, {TimeRange:start})\r\n| summarize count() by bin(TimeGenerated, {TimeRange:grain})\r\n| summarize toint(avg(count_))",
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 2"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| summarize Requests = count() by bin(TimeGenerated, {TimeRange:grain}), Action = action_s\r\n| summarize Requests = sum(Requests) by TimeGenerated, Action\r\n| order by TimeGenerated desc\r\n| {ChartType}",
              "size": 1,
              "title": "Time Range: {TimeRange:label}; Granularity: {TimeRange:grain}",
              "timeBrushParameterName": "TimeBrushRange",
              "timeBrushExportOnlyWhenBrushed": true,
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "series",
                  "parameterName": "RuleName",
                  "parameterType": 1
                }
              ],
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "Rule",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Requests",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "Rule",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "Requests",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Allow",
                    "color": "green"
                  },
                  {
                    "seriesName": "Log",
                    "color": "yellow"
                  },
                  {
                    "seriesName": "AnomalyScoring",
                    "color": "orange"
                  },
                  {
                    "seriesName": "Block",
                    "color": "redBright"
                  }
                ],
                "customThresholdLine": "{threshold}",
                "customThresholdLineStyle": 2
              }
            },
            "name": "query - 0"
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 6"
          },
          {
            "type": 1,
            "content": {
              "json": "----"
            },
            "name": "text - 3"
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 7"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Logs Table",
              "loadType": "always",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "For more specific lookups, enter a search term below. If you see an IP address highlighted in red, it has previously been blocked.",
                    "style": "info"
                  },
                  "name": "text - 2"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "0b2a2088-b1ec-43a7-991a-dc57b42fa58c",
                        "version": "KqlParameterItem/1.0",
                        "name": "Search",
                        "type": 1,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "value": ""
                      }
                    ],
                    "style": "formHorizontal",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 2"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| search \"{Search}\"\r\n| project-away $table\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeRange:label}",
                    "noDataMessage": "No results were found",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isNotEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeBrushRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeBrushRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeBrushRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| search \"{Search}\"\r\n| project-away $table\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeBrushRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isNotEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| where Action in ({RuleName})\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| search \"{Search}\"\r\n| project-away $table\r\n| where Action in ({RuleName})\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeRange:label}",
                    "noDataMessage": "No results were found",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isNotEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeBrushRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| where Action in ({RuleName})\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeBrushRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| search \"{Search}\"\r\n| project-away $table\r\n| where Action in ({RuleName})\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeBrushRange:label}",
                    "noDataMessage": "No results were found",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isNotEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "6fc312b7-1370-4bdd-b347-9911ebeb952b",
                        "version": "KqlParameterItem/1.0",
                        "name": "Investigate",
                        "type": 10,
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "jsonData": "[\r\n    {\"value\":\"yes\", \"label\":\"Yes\"},\r\n    {\"value\":\"no\", \"label\":\"No\", \"selected\":true}\r\n]",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "70",
                  "conditionalVisibility": {
                    "parameterName": "ClientIP",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "parameters - 10"
                },
                {
                  "type": 1,
                  "content": {
                    "json": ""
                  },
                  "conditionalVisibility": {
                    "parameterName": "Investigate",
                    "comparison": "isEqualTo",
                    "value": "yes"
                  },
                  "name": "text - 14"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "---"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Investigate",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    },
                    {
                      "parameterName": "Help",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    }
                  ],
                  "name": "text - 12"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Help!\r\n### > Investigation Features <\r\n\r\n|Feature|Description|\r\n|---|---|\r\n|Search by Time Range|Within the investigation section, you can specify a time range for conducting an investigation on a specific IP address of a host.|\r\n|Search by Time Range with Brush|You can further narrow your results by using the time brush in the bar chart in the investigation section.|\r\n|Pie Chart|The pie chart in the investigation section shows how many requests from the specific IP Address were allowed, logged, flagged or blocked during the specified time frame.|\r\n|Search by Search bar|To narrow your search results, use the search bar above the investigation logs table.|\r\n\r\n#### Note: Please conduct investigations using the time range provided within the investigation section, as it is not linked to the global time frame and was created specifically for the investigation section to minimise scrolling.",
                    "style": "info"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Investigate",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    },
                    {
                      "parameterName": "Help",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    }
                  ],
                  "name": "text - 13"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "---"
                        },
                        "name": "text - 3"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "Please set a Time Range to conduct the investigation.",
                          "style": "info"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Help",
                          "comparison": "isEqualTo",
                          "value": "no"
                        },
                        "name": "text - 7"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "\r\n### Investigating IP Address: \r\n\r\n## {ClientIP}\r\n"
                        },
                        "customWidth": "70",
                        "conditionalVisibility": {
                          "parameterName": "ClientIP",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 11"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "8079119d-8ab5-4b9b-b1c5-38decdb5161e",
                              "version": "KqlParameterItem/1.0",
                              "name": "TimeRangeInvestigate",
                              "label": "Time Range",
                              "type": 4,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "value": {
                                "durationMs": 7776000000
                              }
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "30",
                        "name": "parameters - 2"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "---"
                        },
                        "name": "text - 4"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 14"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "0321cd2d-7442-4551-9f32-1611d1677843",
                              "version": "KqlParameterItem/1.0",
                              "name": "firstvisit",
                              "label": "First Visit Time [UTC]",
                              "type": 1,
                              "isRequired": true,
                              "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated > ago(90d)\r\n| where clientIP_s == \"{ClientIP}\"\r\n| summarize arg_min(TimeGenerated, *) by clientIP_s\r\n| project format_datetime(TimeGenerated,'MM-dd-yyyy HH:mm:ss')",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "c6e0f7e3-9414-4ee1-9154-0b15c5530658",
                              "version": "KqlParameterItem/1.0",
                              "name": "lastvisit",
                              "label": "Last Visit Time [UTC]",
                              "type": 1,
                              "isRequired": true,
                              "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated > ago(90d)\r\n| where clientIP_s == \"{ClientIP}\"\r\n| summarize arg_max(TimeGenerated, *) by clientIP_s\r\n| project format_datetime(TimeGenerated,'MM-dd-yyyy HH:mm:ss')",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "991ad288-415c-4b6d-a53b-d90a51acf9e7",
                              "version": "KqlParameterItem/1.0",
                              "name": "firstblock",
                              "label": "First Block Date [UTC]",
                              "type": 1,
                              "isRequired": true,
                              "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated > ago(90d)\r\n| where clientIP_s == \"{ClientIP}\"\r\n| where action_s == \"Block\"\r\n| summarize arg_min(TimeGenerated, *) by clientIP_s\r\n| project Result = format_datetime(TimeGenerated,'MM-dd-yyyy HH:mm:ss')\r\n| union(\r\ndatatable(Result:string)[\r\n\"Not Blocked Yet\"\r\n]\r\n)\r\n| order by Result asc\r\n| take 1",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "d99b29df-6d1d-4ae8-961b-c19d97321c90",
                              "version": "KqlParameterItem/1.0",
                              "name": "lastblock",
                              "label": "Last Blocked Date [UTC]",
                              "type": 1,
                              "isRequired": true,
                              "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated > ago(90d)\r\n| where clientIP_s == \"{ClientIP}\"\r\n| where action_s == \"Block\"\r\n| summarize arg_max(TimeGenerated, *) by clientIP_s\r\n| project Result = format_datetime(TimeGenerated,'MM-dd-yyyy HH:mm:ss')\r\n| union(\r\ndatatable(Result:string)[\r\n\"Not Blocked Yet\"\r\n]\r\n)\r\n| order by Result asc\r\n| take 1\r\n| extend Result = iff(Result != \"Not Blocked Yet\", iff(Result == \"{firstblock}\", \"Blocked Only Once\", Result), \"Not Blocked Yet\")",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 11"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRangeInvestigate}\r\n| where clientIP_s == \"{ClientIP}\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| summarize count() by bin(TimeGenerated, {TimeRangeInvestigate:grain})\r\n| order by TimeGenerated desc",
                          "size": 4,
                          "noDataMessage": "Please choose a wider Time Range for Bar chart",
                          "timeBrushParameterName": "TimeRangeInvestigate",
                          "timeBrushExportOnlyWhenBrushed": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "graphSettings": {
                            "type": 0
                          },
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "TimeRangeInvestigate",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 8"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 15"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "---"
                        },
                        "name": "text - 9"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 12"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRangeInvestigate}\r\n| where clientIP_s == \"{ClientIP}\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where clientIp_s == \"{ClientIP}\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRangeInvestigate}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| project TimeGenerated, URI = requestUri_s, Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB,[\"Country\"] = clientCountry_s1\r\n| order by TimeGenerated desc;",
                          "size": 0,
                          "title": "Time Range: {TimeRangeInvestigate:label}",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "TimeGenerated",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "30ch"
                                }
                              },
                              {
                                "columnMatch": "IP Address",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "[\"IPBlockCheck\"]",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "25ch"
                                }
                              },
                              {
                                "columnMatch": "Action",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Allow",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Log",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "AnomalyScoring",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Block",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IPBlockCheck",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "customWidth": "70",
                        "conditionalVisibility": {
                          "parameterName": "TimeRangeInvestigate",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRangeInvestigate}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where clientIP_s == \"{ClientIP}\"\r\n| summarize count() by action_s",
                          "size": 3,
                          "title": "Rule Hits in {TimeRangeInvestigate:label}",
                          "noDataMessage": "Please brush a larger Time Range area for Pie Chart Info",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "piechart"
                        },
                        "customWidth": "30",
                        "conditionalVisibility": {
                          "parameterName": "TimeRangeInvestigate",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 12"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 13"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "---"
                        },
                        "name": "text - 10"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 16"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "externaldata(fraud_score:string, bot_status:string, is_crawler:string, proxy:string, vpn:string, active_vpn:string, tor:string, active_tor:string, recent_abuse:string, country_code:string, region:string, city:string, organization:string, ISP:string, ASN:string, host:string)\r\n[\r\n  h@\"https://ipqualityscore.com/api/json/ip/SzorffTYCpTkHKMGs06k6VFcMYuyPwbw/{ClientIP}?strictness=1&allow_public_access_points=false&fast=false&lighter_penalties=false&mobile=false\"\r\n]\r\nwith(format=\"json\")",
                          "size": 4,
                          "timeContext": {
                            "durationMs": 86400000
                          },
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "query - 6"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Investigate",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    },
                    {
                      "parameterName": "ClientIP",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "group - 13"
                }
              ]
            },
            "name": "group - 3",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "netmgt"
      },
      "name": "group - 3"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Help!\r\n### > Control Options <\r\n\r\n|Control|Description|\r\n|---|---|\r\n|Time Range|The time span over which the monitoring or investigation is conducted.|\r\n|Chart Type|Used to select the type of chart used for monitoring graph events.|\r\n|Site|The site that we have chosen to monitor or investigate.|\r\n\r\n### > Glossary <\r\n\r\n|Term|Description|\r\n|---|---|\r\n|Total Bot Requests|The total of all individual requests sent by all bots|\r\n|Total Bot Session Count|The total number of bot-initiated sessions. The same bots may appear with a different session in this case, which also counts.|\r\n|Risky Bot Requests|The sum of all individual requests sent by Attacking Bots, Suspicious Bots, Blocked Bots and some Unknown bots identified by Microsoft's Threat Intelligence.|\r\n|Blocked Bot Requests|The sum of all individual requests sent by only Blocked Bots.|\r\n|Monitoring Bots|Site health monitoring bots and service agents|\r\n|SEO Bots|Verified and Unverified search engine crawlers|\r\n|Dev Bots|General purpose HTTP clients and SDKs|\r\n|Attacking Bots|Tools and frameworks for web crawling and attacks|\r\n|Suspicious Bots|Bots with an Unspecified identity|\r\n|Unknown Bots|Unknown bots detected by threat intelligence|\r\n\r\n### > Features <\r\n\r\n|Feature|Description|\r\n|---|---|\r\n|Search by Time Range|This allows you to search through your logs within the specified time frame. The graph requires two controls, one for Time Range and one for Granularity. The Logs shown below the graph require only one control to function, which is the Time Range.|\r\n|Search by Time Range with Brush|You can use a brush to narrow down your search results by selecting a specific time interval within the graph. Hold down the left mouse button at the desired start time and release when the desired end time has arrived. The logs below the graph will display a more refined output based on the time range specified by the user in the graph.|\r\n|Search by Bot Category|The right side of the graph displays a selectable legend, allowing you to choose the category of bots you want to investigate and view logs accordingly below.|\r\n|Search by both Time Brush and Bot Category|To get a more specific result, combine the Time Brush function of the graph with the Bot Categories from the graph legend.|\r\n|Search by Search bar|To narrow your search results, use the search bar above the logs table.|",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "text - 5"
          },
          {
            "type": 1,
            "content": {
              "json": "---"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "text - 6"
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 6"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "78fb6ab8-8441-45d5-99ca-6af4cb30d562",
                  "version": "KqlParameterItem/1.0",
                  "name": "TotalBotCount",
                  "label": "Total Bot Requests",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| summarize [\"Total Bot Requests\"] = count()",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "version": "KqlParameterItem/1.0",
                  "name": "UniqueBotSession",
                  "label": "Total Bot Session Count",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| summarize count() by clientIP_s\r\n| count",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "id": "64a45dd2-ea9b-4ff1-8438-2416d5a02015"
                },
                {
                  "id": "6c728cd8-a9fd-4c0d-a92b-36509e5ddb74",
                  "version": "KqlParameterItem/1.0",
                  "name": "RiskyBots",
                  "label": "Risky Bot Requests",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Bot300200\" or ruleName_s contains \"Bot100100\" or ruleName_s contains \"Bot100200\" or ruleName_s contains \"Bot300600\"\r\n| summarize [\"Total Bot Requests\"] = count()\r\n| extend [\"Total Bot Requests\"] = iff(tostring(['Total Bot Requests']) == \"\",\"0\", tostring(['Total Bot Requests']))",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "b78d7570-f7d1-43cd-b481-29902017201a",
                  "version": "KqlParameterItem/1.0",
                  "name": "BlockedBotCount",
                  "label": "Blocked Bot Requests",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Bot100200\" or ruleName_s contains \"Bot100100\"\r\n| summarize [\"Total Bot Requests\"] = count()\r\n| extend [\"Total Bot Requests\"] = iff(tostring(['Total Bot Requests']) == \"\",\"0\", tostring(['Total Bot Requests']))",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "e312d1dd-cb76-478a-bc7c-642fd650c1b9",
                  "version": "KqlParameterItem/1.0",
                  "name": "threshold",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| where TimeGenerated > datetime_add('day', -30, {TimeRange:start})\r\n| summarize count() by bin(TimeGenerated, {TimeRange:grain})\r\n| summarize toint(avg(count_))",
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 2"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Unknown\"\r\n| summarize Requests = count() by bin(TimeGenerated, {TimeRange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bot300100\", \"Unknown Bots\", iff(['Rule Name'] contains \"Bot300200\", \"Attacking Bots\", iff(['Rule Name'] contains \"Bot300400\" or ['Rule Name'] contains \"Bot300500\", \"Monitoring Bots\", iff(['Rule Name'] contains \"Bot300300\", \"Dev Bots\", iff(['Rule Name'] contains \"Bot300600\", \"Suspicious Bots\", iff(['Rule Name'] contains \"Bot300700\", \"Other Bots\", \"Unspecified Rule\"))))))\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Good\"\r\n| summarize Requests = count() by bin(TimeGenerated, {TimeRange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Good\", \"SEO Bots\", \"\")\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n)\r\n| union (\r\nAzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\" and ruleName_s contains \"Bad\"\r\n| summarize Requests = count() by bin(TimeGenerated, {TimeRange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff(['Rule Name'] contains \"Bad\", \"Blocked Bots\", \"\")\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n)\r\n| order by TimeGenerated desc\r\n| {ChartType}",
              "size": 1,
              "title": "Time Range: {TimeRange:label}; Granularity: {TimeRange:grain}",
              "timeBrushParameterName": "TimeBrushRange",
              "timeBrushExportOnlyWhenBrushed": true,
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "series",
                  "parameterName": "RuleName",
                  "parameterType": 1
                }
              ],
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "Rule",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Requests",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "Rule",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "Requests",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "showLegend": true,
                "customThresholdLine": "{threshold}",
                "customThresholdLineStyle": 2
              }
            },
            "name": "query - 0"
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 7"
          },
          {
            "type": 1,
            "content": {
              "json": "----"
            },
            "name": "text - 3"
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 8"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Logs Table",
              "loadType": "always",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "For more specific lookups, enter a search term below. If you see an IP address highlighted in red, it has previously been blocked.",
                    "style": "info"
                  },
                  "name": "text - 2"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "0b2a2088-b1ec-43a7-991a-dc57b42fa58c",
                        "version": "KqlParameterItem/1.0",
                        "name": "Search",
                        "type": 1,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "value": ""
                      }
                    ],
                    "style": "formHorizontal",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 2"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Bot Type\"] = iff(ruleName_s contains \"Bot300100\", \"Unknown Bots\", iff(ruleName_s contains \"Bot300200\", \"Attacking Bots\", iff(ruleName_s contains \"Bot300400\" or ruleName_s contains \"Bot300500\", \"Monitoring Bots\", iff(ruleName_s contains \"Bot300300\", \"Dev Bots\", iff(ruleName_s contains \"Bot300600\", \"Suspicious Bots\", iff(ruleName_s contains \"Bot300700\", \"Other Bots\", iff(ruleName_s contains \"Good\", \"SEO Bots\", iff(ruleName_s contains \"Bad\", \"Blocked Bots\", \"Unspecified Rule\"))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Bot Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Bot Type\"] = iff(ruleName_s contains \"Bot300100\", \"Unknown Bots\", iff(ruleName_s contains \"Bot300200\", \"Attacking Bots\", iff(ruleName_s contains \"Bot300400\" or ruleName_s contains \"Bot300500\", \"Monitoring Bots\", iff(ruleName_s contains \"Bot300300\", \"Dev Bots\", iff(ruleName_s contains \"Bot300600\", \"Suspicious Bots\", iff(ruleName_s contains \"Bot300700\", \"Other Bots\", iff(ruleName_s contains \"Good\", \"SEO Bots\", iff(ruleName_s contains \"Bad\", \"Blocked Bots\", \"Unspecified Rule\"))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Bot Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| search \"{Search}\"\r\n| project-away $table\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeRange:label}",
                    "noDataMessage": "No results were found",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isNotEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeBrushRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Bot Type\"] = iff(ruleName_s contains \"Bot300100\", \"Unknown Bots\", iff(ruleName_s contains \"Bot300200\", \"Attacking Bots\", iff(ruleName_s contains \"Bot300400\" or ruleName_s contains \"Bot300500\", \"Monitoring Bots\", iff(ruleName_s contains \"Bot300300\", \"Dev Bots\", iff(ruleName_s contains \"Bot300600\", \"Suspicious Bots\", iff(ruleName_s contains \"Bot300700\", \"Other Bots\", iff(ruleName_s contains \"Good\", \"SEO Bots\", iff(ruleName_s contains \"Bad\", \"Blocked Bots\", \"Unspecified Rule\"))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Bot Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeBrushRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeBrushRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Bot Type\"] = iff(ruleName_s contains \"Bot300100\", \"Unknown Bots\", iff(ruleName_s contains \"Bot300200\", \"Attacking Bots\", iff(ruleName_s contains \"Bot300400\" or ruleName_s contains \"Bot300500\", \"Monitoring Bots\", iff(ruleName_s contains \"Bot300300\", \"Dev Bots\", iff(ruleName_s contains \"Bot300600\", \"Suspicious Bots\", iff(ruleName_s contains \"Bot300700\", \"Other Bots\", iff(ruleName_s contains \"Good\", \"SEO Bots\", iff(ruleName_s contains \"Bad\", \"Blocked Bots\", \"Unspecified Rule\"))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Bot Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| search \"{Search}\"\r\n| project-away $table\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeBrushRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isNotEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Bot Type\"] = iff(ruleName_s contains \"Bot300100\", \"Unknown Bots\", iff(ruleName_s contains \"Bot300200\", \"Attacking Bots\", iff(ruleName_s contains \"Bot300400\" or ruleName_s contains \"Bot300500\", \"Monitoring Bots\", iff(ruleName_s contains \"Bot300300\", \"Dev Bots\", iff(ruleName_s contains \"Bot300600\", \"Suspicious Bots\", iff(ruleName_s contains \"Bot300700\", \"Other Bots\", iff(ruleName_s contains \"Good\", \"SEO Bots\", iff(ruleName_s contains \"Bad\", \"Blocked Bots\", \"Unspecified Rule\"))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Bot Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| where [\"Bot Type\"] in ({RuleName})\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Bot Type\"] = iff(ruleName_s contains \"Bot300100\", \"Unknown Bots\", iff(ruleName_s contains \"Bot300200\", \"Attacking Bots\", iff(ruleName_s contains \"Bot300400\" or ruleName_s contains \"Bot300500\", \"Monitoring Bots\", iff(ruleName_s contains \"Bot300300\", \"Dev Bots\", iff(ruleName_s contains \"Bot300600\", \"Suspicious Bots\", iff(ruleName_s contains \"Bot300700\", \"Other Bots\", iff(ruleName_s contains \"Good\", \"SEO Bots\", iff(ruleName_s contains \"Bad\", \"Blocked Bots\", \"Unspecified Rule\"))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Bot Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| search \"{Search}\"\r\n| project-away $table\r\n| where [\"Bot Type\"] in ({RuleName})\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeRange:label}",
                    "noDataMessage": "No results were found",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isNotEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeBrushRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Bot Type\"] = iff(ruleName_s contains \"Bot300100\", \"Unknown Bots\", iff(ruleName_s contains \"Bot300200\", \"Attacking Bots\", iff(ruleName_s contains \"Bot300400\" or ruleName_s contains \"Bot300500\", \"Monitoring Bots\", iff(ruleName_s contains \"Bot300300\", \"Dev Bots\", iff(ruleName_s contains \"Bot300600\", \"Suspicious Bots\", iff(ruleName_s contains \"Bot300700\", \"Other Bots\", iff(ruleName_s contains \"Good\", \"SEO Bots\", iff(ruleName_s contains \"Bad\", \"Blocked Bots\", \"Unspecified Rule\"))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Bot Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| where [\"Bot Type\"] in ({RuleName})\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeBrushRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Bot Type\"] = iff(ruleName_s contains \"Bot300100\", \"Unknown Bots\", iff(ruleName_s contains \"Bot300200\", \"Attacking Bots\", iff(ruleName_s contains \"Bot300400\" or ruleName_s contains \"Bot300500\", \"Monitoring Bots\", iff(ruleName_s contains \"Bot300300\", \"Dev Bots\", iff(ruleName_s contains \"Bot300600\", \"Suspicious Bots\", iff(ruleName_s contains \"Bot300700\", \"Other Bots\", iff(ruleName_s contains \"Good\", \"SEO Bots\", iff(ruleName_s contains \"Bad\", \"Blocked Bots\", \"Unspecified Rule\"))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s, [\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Bot Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| search \"{Search}\"\r\n| project-away $table\r\n| where [\"Bot Type\"] in ({RuleName})\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeBrushRange:label}",
                    "noDataMessage": "No results were found",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isNotEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "6fc312b7-1370-4bdd-b347-9911ebeb952b",
                        "version": "KqlParameterItem/1.0",
                        "name": "Investigate",
                        "type": 10,
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "jsonData": "[\r\n    {\"value\":\"yes\", \"label\":\"Yes\"},\r\n    {\"value\":\"no\", \"label\":\"No\", \"selected\":true}\r\n]",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "70",
                  "conditionalVisibility": {
                    "parameterName": "ClientIP",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "parameters - 10"
                },
                {
                  "type": 1,
                  "content": {
                    "json": ""
                  },
                  "conditionalVisibility": {
                    "parameterName": "Investigate",
                    "comparison": "isEqualTo",
                    "value": "yes"
                  },
                  "name": "text - 14"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "---"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Investigate",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    },
                    {
                      "parameterName": "Help",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    }
                  ],
                  "name": "text - 12"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Help!\r\n### > Investigation Features <\r\n\r\n|Feature|Description|\r\n|---|---|\r\n|Search by Time Range|Within the investigation section, you can specify a time range for conducting an investigation on a specific IP address of a bot.|\r\n|Search by Time Range with Brush|You can further narrow your results by using the time brush in the bar chart in the investigation section.|\r\n|Pie Chart|The pie chart in the investigation section shows how many requests from the specific bot were allowed, logged, or blocked during the specified time frame.|\r\n|Search by Search bar|To narrow your search results, use the search bar above the investigation logs table.|\r\n\r\n#### Note: Please conduct investigations using the time range provided within the investigation section, as it is not linked to the global time frame and was created specifically for the investigation section to minimise scrolling.",
                    "style": "info"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Investigate",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    },
                    {
                      "parameterName": "Help",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    }
                  ],
                  "name": "text - 13"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "---"
                        },
                        "name": "text - 3"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "Please set a Time Range to conduct the investigation.",
                          "style": "info"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Help",
                          "comparison": "isEqualTo",
                          "value": "no"
                        },
                        "name": "text - 7"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "\r\n### Investigating IP Address: \r\n\r\n## {ClientIP}\r\n"
                        },
                        "customWidth": "70",
                        "conditionalVisibility": {
                          "parameterName": "ClientIP",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 11"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "8079119d-8ab5-4b9b-b1c5-38decdb5161e",
                              "version": "KqlParameterItem/1.0",
                              "name": "TimeRangeInvestigate",
                              "label": "Time Range",
                              "type": 4,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "value": {
                                "durationMs": 7776000000
                              }
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "30",
                        "name": "parameters - 2"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "---"
                        },
                        "name": "text - 4"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 12"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "0321cd2d-7442-4551-9f32-1611d1677843",
                              "version": "KqlParameterItem/1.0",
                              "name": "firstvisit",
                              "label": "First Visit Time [UTC]",
                              "type": 1,
                              "isRequired": true,
                              "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated > ago(90d)\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| where clientIP_s == \"{ClientIP}\"\r\n| summarize arg_min(TimeGenerated, *) by clientIP_s\r\n| project format_datetime(TimeGenerated,'MM-dd-yyyy HH:mm:ss')",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "c6e0f7e3-9414-4ee1-9154-0b15c5530658",
                              "version": "KqlParameterItem/1.0",
                              "name": "lastvisit",
                              "label": "Last Visit Time [UTC]",
                              "type": 1,
                              "isRequired": true,
                              "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated > ago(90d)\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| where clientIP_s == \"{ClientIP}\"\r\n| summarize arg_max(TimeGenerated, *) by clientIP_s\r\n| project format_datetime(TimeGenerated,'MM-dd-yyyy HH:mm:ss')",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "991ad288-415c-4b6d-a53b-d90a51acf9e7",
                              "version": "KqlParameterItem/1.0",
                              "name": "firstblock",
                              "label": "First Block Date [UTC]",
                              "type": 1,
                              "isRequired": true,
                              "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated > ago(90d)\r\n| where clientIP_s == \"{ClientIP}\"\r\n| where action_s == \"Block\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| summarize arg_min(TimeGenerated, *) by clientIP_s\r\n| project Result = format_datetime(TimeGenerated,'MM-dd-yyyy HH:mm:ss')\r\n| union(\r\ndatatable(Result:string)[\r\n\"Not Blocked Yet\"\r\n]\r\n)\r\n| order by Result asc\r\n| take 1",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "d99b29df-6d1d-4ae8-961b-c19d97321c90",
                              "version": "KqlParameterItem/1.0",
                              "name": "lastblock",
                              "label": "Last Blocked Date [UTC]",
                              "type": 1,
                              "isRequired": true,
                              "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated > ago(90d)\r\n| where clientIP_s == \"{ClientIP}\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| where action_s == \"Block\"\r\n| summarize arg_max(TimeGenerated, *) by clientIP_s\r\n| project Result = format_datetime(TimeGenerated,'MM-dd-yyyy HH:mm:ss')\r\n| union(\r\ndatatable(Result:string)[\r\n\"Not Blocked Yet\"\r\n]\r\n)\r\n| order by Result asc\r\n| take 1\r\n| extend Result = iff(Result != \"Not Blocked Yet\", iff(Result == \"{firstblock}\", \"Blocked Only Once\", Result), \"Not Blocked Yet\")",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 11"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRangeInvestigate}\r\n| where clientIP_s == \"{ClientIP}\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| summarize count() by bin(TimeGenerated, {TimeRangeInvestigate:grain})\r\n| order by TimeGenerated desc",
                          "size": 4,
                          "noDataMessage": "Please choose a wider Time Range for Bar chart",
                          "timeBrushParameterName": "TimeRangeInvestigate",
                          "timeBrushExportOnlyWhenBrushed": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "graphSettings": {
                            "type": 0
                          },
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "TimeRangeInvestigate",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 8"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 13"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "---"
                        },
                        "name": "text - 9"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 14"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRangeInvestigate}\r\n| where clientIP_s == \"{ClientIP}\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where clientIp_s == \"{ClientIP}\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRangeInvestigate}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| extend [\"Bot Type\"] = iff(ruleName_s contains \"Bot300100\", \"Unknown Bots\", iff(ruleName_s contains \"Bot300200\", \"Attacking Bots\", iff(ruleName_s contains \"Bot300400\" or ruleName_s contains \"Bot300500\", \"Monitoring Bots\", iff(ruleName_s contains \"Bot300300\", \"Dev Bots\", iff(ruleName_s contains \"Bot300600\", \"Suspicious Bots\", iff(ruleName_s contains \"Bot300700\", \"Other Bots\", iff(ruleName_s contains \"Good\", \"SEO Bots\", iff(ruleName_s contains \"Bad\", \"Blocked Bots\", \"Unspecified Rule\"))))))))\r\n| project TimeGenerated, URI = requestUri_s, [\"Bot Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB , [\"Country\"] = clientCountry_s1\r\n| order by TimeGenerated desc;",
                          "size": 0,
                          "title": "Time Range: {TimeRangeInvestigate:label}",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "TimeGenerated",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "30ch"
                                }
                              },
                              {
                                "columnMatch": "IP Address",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "[\"IPBlockCheck\"]",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "25ch"
                                }
                              },
                              {
                                "columnMatch": "Action",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Allow",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Log",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "AnomalyScoring",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Block",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IPBlockCheck",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "customWidth": "70",
                        "conditionalVisibility": {
                          "parameterName": "TimeRangeInvestigate",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRangeInvestigate}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_BotManagerRuleSet-\"\r\n| where clientIP_s == \"{ClientIP}\"\r\n| summarize count() by action_s",
                          "size": 3,
                          "title": "Rule Hits in {TimeRangeInvestigate:label}",
                          "noDataMessage": "Please brush a larger Time Range area for Pie Chart Info",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "piechart"
                        },
                        "customWidth": "30",
                        "conditionalVisibility": {
                          "parameterName": "TimeRangeInvestigate",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 12"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 15"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "---"
                        },
                        "name": "text - 10"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 16"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "externaldata(fraud_score:string, bot_status:string, is_crawler:string, proxy:string, vpn:string, active_vpn:string, tor:string, active_tor:string, recent_abuse:string, country_code:string, region:string, city:string, organization:string, ISP:string, ASN:string, host:string)\r\n[\r\n  h@\"https://ipqualityscore.com/api/json/ip/SzorffTYCpTkHKMGs06k6VFcMYuyPwbw/{ClientIP}?strictness=1&allow_public_access_points=false&fast=false&lighter_penalties=false&mobile=false\"\r\n]\r\nwith(format=\"json\")",
                          "size": 4,
                          "timeContext": {
                            "durationMs": 86400000
                          },
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "query - 6"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Investigate",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    },
                    {
                      "parameterName": "ClientIP",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "group - 13"
                }
              ]
            },
            "name": "group - 3",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "botmgt"
      },
      "name": "group - 3"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Help!\r\n### > Control Options <\r\n\r\n|Control|Description|\r\n|---|---|\r\n|Time Range|The time span over which the monitoring or investigation is conducted.|\r\n|Chart Type|Used to select the type of chart used for monitoring graph events.|\r\n|Site|The site that we have chosen to monitor or investigate.|\r\n\r\n### > Glossary <\r\n\r\n|Term|Description|\r\n|---|---|\r\n|Total Suspicious Requests|The total of all individual requests sent by possible attackers|\r\n|Suspicious Session Count|The total number of attacker-initiated suspicious sessions. The same hosts may appear with a different session in this case, which also counts.|\r\n|Total Attack Requests|The sum of all individual requests sent by Attackers and Blocked Hosts identified by Microsoft's Threat Intelligence.|\r\n|Blocked Attack Requests|The sum of all individual requests sent by only Blocked Hosts.|\r\n\r\n### > Features <\r\n\r\n|Feature|Description|\r\n|---|---|\r\n|Search by Time Range|This allows you to search through your logs within the specified time frame. The graph requires two controls, one for Time Range and one for Granularity. The Logs shown below the graph require only one control to function, which is the Time Range.|\r\n|Search by Time Range with Brush|You can use a brush to narrow down your search results by selecting a specific time interval within the graph. Hold down the left mouse button at the desired start time and release when the desired end time has arrived. The logs below the graph will display a more refined output based on the time range specified by the user in the graph.|\r\n|Search by Attack Category|The right side of the graph displays a selectable legend, allowing you to choose the category of attacks you want to investigate and view logs accordingly below.|\r\n|Search by both Time Brush and Attack Category|To get a more specific result, combine the Time Brush function of the graph with the Attack Categories from the graph legend.|\r\n|Search by Search bar|To narrow your search results, use the search bar above the logs table.|",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "text - 5"
          },
          {
            "type": 1,
            "content": {
              "json": "---"
            },
            "conditionalVisibility": {
              "parameterName": "Help",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "text - 6"
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 6"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "78fb6ab8-8441-45d5-99ca-6af4cb30d562",
                  "version": "KqlParameterItem/1.0",
                  "name": "TotalAttackCount",
                  "label": "Total Suspicious Requests",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where action_s in (\"Log\", \"AnomalyScoring\", \"Block\") and ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\"\r\n| summarize [\"Total Attack Requests\"] = count()",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "64a45dd2-ea9b-4ff1-8438-2416d5a02015",
                  "version": "KqlParameterItem/1.0",
                  "name": "UniqueAttackSession",
                  "label": "Suspicious Session Count",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where action_s in (\"Log\", \"AnomalyScoring\", \"Block\") and ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\"\r\n| summarize count() by clientIP_s\r\n| count",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "6c728cd8-a9fd-4c0d-a92b-36509e5ddb74",
                  "version": "KqlParameterItem/1.0",
                  "name": "RiskyAttack",
                  "label": "Total Attack Requests",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where action_s in (\"AnomalyScoring\", \"Block\") and ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\"\r\n| summarize [\"Total Bot Requests\"] = count()\r\n| extend [\"Total Bot Requests\"] = iff(tostring(['Total Bot Requests']) == \"\",\"0\", tostring(['Total Bot Requests']))",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "b78d7570-f7d1-43cd-b481-29902017201a",
                  "version": "KqlParameterItem/1.0",
                  "name": "BlockedAccountCount",
                  "label": "Blocked Attack Requests",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where action_s == \"Block\" and ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\"\r\n| summarize [\"Total Bot Requests\"] = count()\r\n| extend [\"Total Bot Requests\"] = iff(tostring(['Total Bot Requests']) == \"\",\"0\", tostring(['Total Bot Requests']))",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                },
                {
                  "id": "0fe66072-3b8a-43e8-b5f2-1895b584707e",
                  "version": "KqlParameterItem/1.0",
                  "name": "threshold",
                  "type": 1,
                  "isRequired": true,
                  "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| where TimeGenerated > datetime_add('day', -30, {TimeRange:start})\r\n| summarize count() by bin(TimeGenerated, {TimeRange:grain})\r\n| summarize toint(avg(count_))",
                  "isHiddenWhenLocked": true,
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces"
                }
              ],
              "style": "pills",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters - 2"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| summarize Requests = count() by bin(TimeGenerated, {TimeRange:grain}), [\"Rule Name\"] = ruleName_s\r\n| extend Rule = iff([\"Rule Name\"] contains \"SQL\", \"SQL Injection\", iff([\"Rule Name\"] contains \"XSS\", \"Cross-Site Scripting\",iff([\"Rule Name\"] contains \"LFI\", \"Local File Inclusion \" ,iff([\"Rule Name\"] contains \"RFI\", \"Remote File Inclusion \" ,iff([\"Rule Name\"] contains \"PHP\", \"PHP Injection Attack \" ,iff([\"Rule Name\"] contains \"NODEJS\", \"Node.js Injection Attack \" , iff([\"Rule Name\"] contains \"JAVA\", \"Suspicious Java class\",iff([\"Rule Name\"] contains \"PROTOCOL-\", \"Protocol Attacks\",iff([\"Rule Name\"] contains \"FIX\", \"Session Fixation\",iff([\"Rule Name\"] contains \"WebShell\", \"Web-Shell Attack\",iff([\"Rule Name\"] contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff([\"Rule Name\"] contains \"99030002\", \"Path Traversal Evasion\",iff([\"Rule Name\"] contains \"RCE\" and [\"Rule Name\"] notcontains \"PROTOCOL\" and [\"Rule Name\"] notcontains \"METHOD\", \"Remote Code Execution\",iff([\"Rule Name\"] contains \"BLOCKING-\", \"Blocked Attacks\", iff([\"Rule Name\"] contains \"METHOD-ENFORCEMENT\", \"Method Attack\", \"Unspecified Rule\")))))))))))))))\r\n| summarize Requests = sum(Requests) by TimeGenerated, Rule\r\n| order by TimeGenerated desc\r\n| {ChartType}",
              "size": 1,
              "title": "Time Range: {TimeRange:label}; Granularity: {TimeRange:grain}",
              "timeBrushParameterName": "TimeBrushRange",
              "timeBrushExportOnlyWhenBrushed": true,
              "exportMultipleValues": true,
              "exportedParameters": [
                {
                  "fieldName": "series",
                  "parameterName": "RuleName",
                  "parameterType": 1
                }
              ],
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "tileSettings": {
                "showBorder": false,
                "titleContent": {
                  "columnMatch": "Rule",
                  "formatter": 1
                },
                "leftContent": {
                  "columnMatch": "Requests",
                  "formatter": 12,
                  "formatOptions": {
                    "palette": "auto"
                  },
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "graphSettings": {
                "type": 0,
                "topContent": {
                  "columnMatch": "Rule",
                  "formatter": 1
                },
                "centerContent": {
                  "columnMatch": "Requests",
                  "formatter": 1,
                  "numberFormat": {
                    "unit": 17,
                    "options": {
                      "maximumSignificantDigits": 3,
                      "maximumFractionDigits": 2
                    }
                  }
                }
              },
              "chartSettings": {
                "showLegend": true,
                "seriesLabelSettings": [
                  {
                    "seriesName": "Blocked Attacks",
                    "color": "redBright"
                  }
                ],
                "customThresholdLine": "{threshold}",
                "customThresholdLineStyle": 2
              }
            },
            "name": "query - 0"
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 7"
          },
          {
            "type": 1,
            "content": {
              "json": "----"
            },
            "name": "text - 3"
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 8"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "title": "Logs Table",
              "loadType": "always",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "For more specific lookups, enter a search term below. If you see an IP address highlighted in red, it has previously been blocked.",
                    "style": "info"
                  },
                  "name": "text - 2"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "0b2a2088-b1ec-43a7-991a-dc57b42fa58c",
                        "version": "KqlParameterItem/1.0",
                        "name": "Search",
                        "type": 1,
                        "timeContext": {
                          "durationMs": 86400000
                        },
                        "value": ""
                      }
                    ],
                    "style": "formHorizontal",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "name": "parameters - 2"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Attack Type\"] = iff(ruleName_s contains \"SQL\", \"SQL Injection\", iff(ruleName_s contains \"XSS\", \"Cross-Site Scripting\",iff(ruleName_s contains \"LFI\", \"Local File Inclusion \" ,iff(ruleName_s contains \"RFI\", \"Remote File Inclusion \" ,iff(ruleName_s contains \"PHP\", \"PHP Injection Attack \" ,iff(ruleName_s contains \"NODEJS\", \"Node.js Injection Attack \" , iff(ruleName_s contains \"JAVA\", \"Suspicious Java class\",iff(ruleName_s contains \"PROTOCOL-\", \"Protocol Attacks\",iff(ruleName_s contains \"FIX\", \"Session Fixation\",iff(ruleName_s contains \"WebShell\", \"Web-Shell Attack\",iff(ruleName_s contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff(ruleName_s contains \"99030002\", \"Path Traversal Evasion\",iff(ruleName_s contains \"RCE\" and ruleName_s notcontains \"PROTOCOL\" and ruleName_s notcontains \"METHOD\", \"Remote Code Execution\",iff(ruleName_s contains \"BLOCKING-\", \"Blocked Attacks\", iff(ruleName_s contains \"METHOD-ENFORCEMENT\", \"Method Attacks\",\"Unspecified Rule\")))))))))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s,[\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Attack Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| order by TimeGenerated desc",
                    "size": 0,
                    "title": "{TimeRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Attack Type\"] = iff(ruleName_s contains \"SQL\", \"SQL Injection\", iff(ruleName_s contains \"XSS\", \"Cross-Site Scripting\",iff(ruleName_s contains \"LFI\", \"Local File Inclusion \" ,iff(ruleName_s contains \"RFI\", \"Remote File Inclusion \" ,iff(ruleName_s contains \"PHP\", \"PHP Injection Attack \" ,iff(ruleName_s contains \"NODEJS\", \"Node.js Injection Attack \" , iff(ruleName_s contains \"JAVA\", \"Suspicious Java class\",iff(ruleName_s contains \"PROTOCOL-\", \"Protocol Attacks\",iff(ruleName_s contains \"FIX\", \"Session Fixation\",iff(ruleName_s contains \"WebShell\", \"Web-Shell Attack\",iff(ruleName_s contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff(ruleName_s contains \"99030002\", \"Path Traversal Evasion\",iff(ruleName_s contains \"RCE\" and ruleName_s notcontains \"PROTOCOL\" and ruleName_s notcontains \"METHOD\", \"Remote Code Execution\",iff(ruleName_s contains \"BLOCKING-\", \"Blocked Attacks\", iff(ruleName_s contains \"METHOD-ENFORCEMENT\", \"Method Attacks\",\"Unspecified Rule\")))))))))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s,[\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Attack Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| search \"{Search}\"\r\n| project-away $table\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeRange:label}",
                    "noDataMessage": "No results were found",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isNotEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeBrushRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Attack Type\"] = iff(ruleName_s contains \"SQL\", \"SQL Injection\", iff(ruleName_s contains \"XSS\", \"Cross-Site Scripting\",iff(ruleName_s contains \"LFI\", \"Local File Inclusion \" ,iff(ruleName_s contains \"RFI\", \"Remote File Inclusion \" ,iff(ruleName_s contains \"PHP\", \"PHP Injection Attack \" ,iff(ruleName_s contains \"NODEJS\", \"Node.js Injection Attack \" , iff(ruleName_s contains \"JAVA\", \"Suspicious Java class\",iff(ruleName_s contains \"PROTOCOL-\", \"Protocol Attacks\",iff(ruleName_s contains \"FIX\", \"Session Fixation\",iff(ruleName_s contains \"WebShell\", \"Web-Shell Attack\",iff(ruleName_s contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff(ruleName_s contains \"99030002\", \"Path Traversal Evasion\",iff(ruleName_s contains \"RCE\" and ruleName_s notcontains \"PROTOCOL\" and ruleName_s notcontains \"METHOD\", \"Remote Code Execution\",iff(ruleName_s contains \"BLOCKING-\", \"Blocked Attacks\", iff(ruleName_s contains \"METHOD-ENFORCEMENT\", \"Method Attacks\",\"Unspecified Rule\")))))))))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s,[\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Attack Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeBrushRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeBrushRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Attack Type\"] = iff(ruleName_s contains \"SQL\", \"SQL Injection\", iff(ruleName_s contains \"XSS\", \"Cross-Site Scripting\",iff(ruleName_s contains \"LFI\", \"Local File Inclusion \" ,iff(ruleName_s contains \"RFI\", \"Remote File Inclusion \" ,iff(ruleName_s contains \"PHP\", \"PHP Injection Attack \" ,iff(ruleName_s contains \"NODEJS\", \"Node.js Injection Attack \" , iff(ruleName_s contains \"JAVA\", \"Suspicious Java class\",iff(ruleName_s contains \"PROTOCOL-\", \"Protocol Attacks\",iff(ruleName_s contains \"FIX\", \"Session Fixation\",iff(ruleName_s contains \"WebShell\", \"Web-Shell Attack\",iff(ruleName_s contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff(ruleName_s contains \"99030002\", \"Path Traversal Evasion\",iff(ruleName_s contains \"RCE\" and ruleName_s notcontains \"PROTOCOL\" and ruleName_s notcontains \"METHOD\", \"Remote Code Execution\",iff(ruleName_s contains \"BLOCKING-\", \"Blocked Attacks\", iff(ruleName_s contains \"METHOD-ENFORCEMENT\", \"Method Attacks\",\"Unspecified Rule\")))))))))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s,[\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Attack Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| search \"{Search}\"\r\n| project-away $table\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeBrushRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isNotEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Attack Type\"] = iff(ruleName_s contains \"SQL\", \"SQL Injection\", iff(ruleName_s contains \"XSS\", \"Cross-Site Scripting\",iff(ruleName_s contains \"LFI\", \"Local File Inclusion \" ,iff(ruleName_s contains \"RFI\", \"Remote File Inclusion \" ,iff(ruleName_s contains \"PHP\", \"PHP Injection Attack \" ,iff(ruleName_s contains \"NODEJS\", \"Node.js Injection Attack \" , iff(ruleName_s contains \"JAVA\", \"Suspicious Java class\",iff(ruleName_s contains \"PROTOCOL-\", \"Protocol Attacks\",iff(ruleName_s contains \"FIX\", \"Session Fixation\",iff(ruleName_s contains \"WebShell\", \"Web-Shell Attack\",iff(ruleName_s contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff(ruleName_s contains \"99030002\", \"Path Traversal Evasion\",iff(ruleName_s contains \"RCE\" and ruleName_s notcontains \"PROTOCOL\" and ruleName_s notcontains \"METHOD\", \"Remote Code Execution\",iff(ruleName_s contains \"BLOCKING-\", \"Blocked Attacks\", iff(ruleName_s contains \"METHOD-ENFORCEMENT\", \"Method Attacks\",\"Unspecified Rule\")))))))))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s,[\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Attack Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| where [\"Attack Type\"] in ({RuleName})\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Attack Type\"] = iff(ruleName_s contains \"SQL\", \"SQL Injection\", iff(ruleName_s contains \"XSS\", \"Cross-Site Scripting\",iff(ruleName_s contains \"LFI\", \"Local File Inclusion \" ,iff(ruleName_s contains \"RFI\", \"Remote File Inclusion \" ,iff(ruleName_s contains \"PHP\", \"PHP Injection Attack \" ,iff(ruleName_s contains \"NODEJS\", \"Node.js Injection Attack \" , iff(ruleName_s contains \"JAVA\", \"Suspicious Java class\",iff(ruleName_s contains \"PROTOCOL-\", \"Protocol Attacks\",iff(ruleName_s contains \"FIX\", \"Session Fixation\",iff(ruleName_s contains \"WebShell\", \"Web-Shell Attack\",iff(ruleName_s contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff(ruleName_s contains \"99030002\", \"Path Traversal Evasion\",iff(ruleName_s contains \"RCE\" and ruleName_s notcontains \"PROTOCOL\" and ruleName_s notcontains \"METHOD\", \"Remote Code Execution\",iff(ruleName_s contains \"BLOCKING-\", \"Blocked Attacks\", iff(ruleName_s contains \"METHOD-ENFORCEMENT\", \"Method Attacks\",\"Unspecified Rule\")))))))))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s,[\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Attack Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| search \"{Search}\"\r\n| project-away $table\r\n| where [\"Attack Type\"] in ({RuleName})\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeRange:label}",
                    "noDataMessage": "No results were found",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isNotEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeBrushRange}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Attack Type\"] = iff(ruleName_s contains \"SQL\", \"SQL Injection\", iff(ruleName_s contains \"XSS\", \"Cross-Site Scripting\",iff(ruleName_s contains \"LFI\", \"Local File Inclusion \" ,iff(ruleName_s contains \"RFI\", \"Remote File Inclusion \" ,iff(ruleName_s contains \"PHP\", \"PHP Injection Attack \" ,iff(ruleName_s contains \"NODEJS\", \"Node.js Injection Attack \" , iff(ruleName_s contains \"JAVA\", \"Suspicious Java class\",iff(ruleName_s contains \"PROTOCOL-\", \"Protocol Attacks\",iff(ruleName_s contains \"FIX\", \"Session Fixation\",iff(ruleName_s contains \"WebShell\", \"Web-Shell Attack\",iff(ruleName_s contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff(ruleName_s contains \"99030002\", \"Path Traversal Evasion\",iff(ruleName_s contains \"RCE\" and ruleName_s notcontains \"PROTOCOL\" and ruleName_s notcontains \"METHOD\", \"Remote Code Execution\",iff(ruleName_s contains \"BLOCKING-\", \"Blocked Attacks\", iff(ruleName_s contains \"METHOD-ENFORCEMENT\", \"Method Attacks\",\"Unspecified Rule\")))))))))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s,[\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Attack Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| where [\"Attack Type\"] in ({RuleName})\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeBrushRange:label}",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\" and ruleName_s notcontains \"General\" and action_s in (\"Log\", \"AnomalyScoring\", \"Block\")\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeBrushRange}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| join kind=leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated > ago(90d)\r\n| where action_s == \"Block\"\r\n| project trackingReference_s, clientIP_s\r\n) on trackingReference_s, clientIP_s\r\n| extend [\"Attack Type\"] = iff(ruleName_s contains \"SQL\", \"SQL Injection\", iff(ruleName_s contains \"XSS\", \"Cross-Site Scripting\",iff(ruleName_s contains \"LFI\", \"Local File Inclusion \" ,iff(ruleName_s contains \"RFI\", \"Remote File Inclusion \" ,iff(ruleName_s contains \"PHP\", \"PHP Injection Attack \" ,iff(ruleName_s contains \"NODEJS\", \"Node.js Injection Attack \" , iff(ruleName_s contains \"JAVA\", \"Suspicious Java class\",iff(ruleName_s contains \"PROTOCOL-\", \"Protocol Attacks\",iff(ruleName_s contains \"FIX\", \"Session Fixation\",iff(ruleName_s contains \"WebShell\", \"Web-Shell Attack\",iff(ruleName_s contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff(ruleName_s contains \"99030002\", \"Path Traversal Evasion\",iff(ruleName_s contains \"RCE\" and ruleName_s notcontains \"PROTOCOL\" and ruleName_s notcontains \"METHOD\", \"Remote Code Execution\",iff(ruleName_s contains \"BLOCKING-\", \"Blocked Attacks\", iff(ruleName_s contains \"METHOD-ENFORCEMENT\", \"Method Attacks\",\"Unspecified Rule\")))))))))))))))\r\n| project TimeGenerated, [\"IP Address\"] = clientIP_s,[\"Country\"] = clientCountry_s1, URI = requestUri_s, [\"Attack Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB, IPBlockCheck = clientIP_s2, [\"Tracking ID\"] = trackingReference_s\r\n| search \"{Search}\"\r\n| project-away $table\r\n| where [\"Attack Type\"] in ({RuleName})\r\n| order by TimeGenerated desc;",
                    "size": 0,
                    "title": "{TimeBrushRange:label}",
                    "noDataMessage": "No results were found",
                    "exportFieldName": "IP Address",
                    "exportParameterName": "ClientIP",
                    "showExportToExcel": true,
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "TimeGenerated",
                          "formatter": 0,
                          "formatOptions": {
                            "customColumnWidthSetting": "30ch"
                          }
                        },
                        {
                          "columnMatch": "IP Address",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "[\"IPBlockCheck\"]",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ],
                            "customColumnWidthSetting": "25ch"
                          }
                        },
                        {
                          "columnMatch": "Action",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "Allow",
                                "representation": "green",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Log",
                                "representation": "yellow",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "AnomalyScoring",
                                "representation": "orange",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "Block",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "IPBlockCheck",
                          "formatter": 5
                        }
                      ],
                      "rowLimit": 10000
                    }
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Search",
                      "comparison": "isNotEqualTo",
                      "value": ""
                    },
                    {
                      "parameterName": "TimeBrushRange",
                      "comparison": "isNotEqualTo"
                    },
                    {
                      "parameterName": "RuleName",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "query - 3"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "6fc312b7-1370-4bdd-b347-9911ebeb952b",
                        "version": "KqlParameterItem/1.0",
                        "name": "Investigate",
                        "type": 10,
                        "isRequired": true,
                        "typeSettings": {
                          "additionalResourceOptions": []
                        },
                        "jsonData": "[\r\n    {\"value\":\"yes\", \"label\":\"Yes\"},\r\n    {\"value\":\"no\", \"label\":\"No\", \"selected\":true}\r\n]",
                        "timeContext": {
                          "durationMs": 86400000
                        }
                      }
                    ],
                    "style": "pills",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces"
                  },
                  "customWidth": "70",
                  "conditionalVisibility": {
                    "parameterName": "ClientIP",
                    "comparison": "isNotEqualTo"
                  },
                  "name": "parameters - 10"
                },
                {
                  "type": 1,
                  "content": {
                    "json": ""
                  },
                  "conditionalVisibility": {
                    "parameterName": "Investigate",
                    "comparison": "isEqualTo",
                    "value": "yes"
                  },
                  "name": "text - 14"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "---"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Investigate",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    },
                    {
                      "parameterName": "Help",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    }
                  ],
                  "name": "text - 12"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "## Help!\r\n### > Investigation Features <\r\n\r\n|Feature|Description|\r\n|---|---|\r\n|Search by Time Range|Within the investigation section, you can specify a time range for conducting an investigation on a specific IP address of an attack.|\r\n|Search by Time Range with Brush|You can further narrow your results by using the time brush in the bar chart in the investigation section.|\r\n|Pie Chart|The pie chart in the investigation section shows how many requests from the specific attacker were allowed, logged, or blocked during the specified time frame.|\r\n|Search by Search bar|To narrow your search results, use the search bar above the investigation logs table.|\r\n\r\n#### Note: Please conduct investigations using the time range provided within the investigation section, as it is not linked to the global time frame and was created specifically for the investigation section to minimise scrolling.",
                    "style": "info"
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Investigate",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    },
                    {
                      "parameterName": "Help",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    }
                  ],
                  "name": "text - 13"
                },
                {
                  "type": 12,
                  "content": {
                    "version": "NotebookGroup/1.0",
                    "groupType": "editable",
                    "items": [
                      {
                        "type": 1,
                        "content": {
                          "json": "---"
                        },
                        "name": "text - 3"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "Please set a Time Range to conduct the investigation.",
                          "style": "info"
                        },
                        "conditionalVisibility": {
                          "parameterName": "Help",
                          "comparison": "isEqualTo",
                          "value": "no"
                        },
                        "name": "text - 7"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "\r\n### Investigating IP Address: \r\n\r\n## {ClientIP}\r\n"
                        },
                        "customWidth": "70",
                        "conditionalVisibility": {
                          "parameterName": "ClientIP",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "text - 11"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "8079119d-8ab5-4b9b-b1c5-38decdb5161e",
                              "version": "KqlParameterItem/1.0",
                              "name": "TimeRangeInvestigate",
                              "label": "Time Range",
                              "type": 4,
                              "typeSettings": {
                                "selectableValues": [
                                  {
                                    "durationMs": 300000
                                  },
                                  {
                                    "durationMs": 900000
                                  },
                                  {
                                    "durationMs": 1800000
                                  },
                                  {
                                    "durationMs": 3600000
                                  },
                                  {
                                    "durationMs": 14400000
                                  },
                                  {
                                    "durationMs": 43200000
                                  },
                                  {
                                    "durationMs": 86400000
                                  },
                                  {
                                    "durationMs": 172800000
                                  },
                                  {
                                    "durationMs": 259200000
                                  },
                                  {
                                    "durationMs": 604800000
                                  },
                                  {
                                    "durationMs": 1209600000
                                  },
                                  {
                                    "durationMs": 2419200000
                                  },
                                  {
                                    "durationMs": 2592000000
                                  },
                                  {
                                    "durationMs": 5184000000
                                  },
                                  {
                                    "durationMs": 7776000000
                                  }
                                ],
                                "allowCustom": true
                              },
                              "timeContext": {
                                "durationMs": 86400000
                              },
                              "value": {
                                "durationMs": 7776000000
                              }
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "customWidth": "30",
                        "name": "parameters - 2"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "---"
                        },
                        "name": "text - 4"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 12"
                      },
                      {
                        "type": 9,
                        "content": {
                          "version": "KqlParameterItem/1.0",
                          "parameters": [
                            {
                              "id": "0321cd2d-7442-4551-9f32-1611d1677843",
                              "version": "KqlParameterItem/1.0",
                              "name": "firstvisit",
                              "label": "First Visit Time [UTC]",
                              "type": 1,
                              "isRequired": true,
                              "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated > ago(90d)\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\"\r\n| where clientIP_s == \"{ClientIP}\"\r\n| summarize arg_min(TimeGenerated, *) by clientIP_s\r\n| project format_datetime(TimeGenerated,'MM-dd-yyyy HH:mm:ss')",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "c6e0f7e3-9414-4ee1-9154-0b15c5530658",
                              "version": "KqlParameterItem/1.0",
                              "name": "lastvisit",
                              "label": "Last Visit Time [UTC]",
                              "type": 1,
                              "isRequired": true,
                              "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated > ago(90d)\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\"\r\n| where clientIP_s == \"{ClientIP}\"\r\n| summarize arg_max(TimeGenerated, *) by clientIP_s\r\n| project format_datetime(TimeGenerated,'MM-dd-yyyy HH:mm:ss')",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "991ad288-415c-4b6d-a53b-d90a51acf9e7",
                              "version": "KqlParameterItem/1.0",
                              "name": "firstblock",
                              "label": "First Block Date [UTC]",
                              "type": 1,
                              "isRequired": true,
                              "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated > ago(90d)\r\n| where clientIP_s == \"{ClientIP}\"\r\n| where action_s == \"Block\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\"\r\n| summarize arg_min(TimeGenerated, *) by clientIP_s\r\n| project Result = format_datetime(TimeGenerated,'MM-dd-yyyy HH:mm:ss')\r\n| union(\r\ndatatable(Result:string)[\r\n\"Not Blocked Yet\"\r\n]\r\n)\r\n| order by Result asc\r\n| take 1",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            },
                            {
                              "id": "d99b29df-6d1d-4ae8-961b-c19d97321c90",
                              "version": "KqlParameterItem/1.0",
                              "name": "lastblock",
                              "label": "Last Blocked Date [UTC]",
                              "type": 1,
                              "isRequired": true,
                              "query": "AzureDiagnostics\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where TimeGenerated > ago(90d)\r\n| where clientIP_s == \"{ClientIP}\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\"\r\n| where action_s == \"Block\"\r\n| summarize arg_max(TimeGenerated, *) by clientIP_s\r\n| project Result = format_datetime(TimeGenerated,'MM-dd-yyyy HH:mm:ss')\r\n| union(\r\ndatatable(Result:string)[\r\n\"Not Blocked Yet\"\r\n]\r\n)\r\n| order by Result asc\r\n| take 1\r\n| extend Result = iff(Result != \"Not Blocked Yet\", iff(Result == \"{firstblock}\", \"Blocked Only Once\", Result), \"Not Blocked Yet\")",
                              "queryType": 0,
                              "resourceType": "microsoft.operationalinsights/workspaces"
                            }
                          ],
                          "style": "pills",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "parameters - 11"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRangeInvestigate}\r\n| where clientIP_s == \"{ClientIP}\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\"\r\n| summarize count() by bin(TimeGenerated, {TimeRangeInvestigate:grain})\r\n| order by TimeGenerated desc",
                          "size": 4,
                          "noDataMessage": "Please choose a wider Time Range for Bar chart",
                          "timeBrushParameterName": "TimeRangeInvestigate",
                          "timeBrushExportOnlyWhenBrushed": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "barchart",
                          "graphSettings": {
                            "type": 0
                          },
                          "chartSettings": {
                            "showMetrics": false
                          }
                        },
                        "conditionalVisibility": {
                          "parameterName": "TimeRangeInvestigate",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 8"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 13"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "---"
                        },
                        "name": "text - 9"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 14"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRangeInvestigate}\r\n| where clientIP_s == \"{ClientIP}\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\"\r\n| join kind = leftouter (\r\nAzureDiagnostics\r\n| where Category == \"FrontDoorAccessLog\"\r\n| where clientIp_s == \"{ClientIP}\"\r\n| where requestUri_s startswith \"{Site}\"\r\n| where TimeGenerated {TimeRangeInvestigate}\r\n) on $left.clientIP_s == $right.clientIp_s, trackingReference_s, requestUri_s\r\n| extend RequestSizeMB = strcat(tostring(round(todecimal(requestBytes_s1) / 1024, 3)), \" KB\")\r\n| extend ResponseSizeMB = strcat(tostring(round(todecimal(responseBytes_s1) / 1024, 3)), \" KB\")\r\n| extend [\"Attack Type\"] = iff(ruleName_s contains \"SQL\", \"SQL Injection\", iff(ruleName_s contains \"XSS\", \"Cross-Site Scripting\",iff(ruleName_s contains \"LFI\", \"Local File Inclusion \" ,iff(ruleName_s contains \"RFI\", \"Remote File Inclusion \" ,iff(ruleName_s contains \"PHP\", \"PHP Injection Attack \" ,iff(ruleName_s contains \"NODEJS\", \"Node.js Injection Attack \" , iff(ruleName_s contains \"JAVA\", \"Suspicious Java class\",iff(ruleName_s contains \"PROTOCOL-\", \"Protocol Attacks\",iff(ruleName_s contains \"FIX\", \"Session Fixation\",iff(ruleName_s contains \"WebShell\", \"Web-Shell Attack\",iff(ruleName_s contains \"CVE\", \"Common Vulnerabilities and Exposures\",iff(ruleName_s contains \"99030002\", \"Path Traversal Evasion\",iff(ruleName_s contains \"RCE\" and ruleName_s notcontains \"PROTOCOL\" and ruleName_s notcontains \"METHOD\", \"Remote Code Execution\",iff(ruleName_s contains \"BLOCKING-\", \"Blocked Attacks\", iff(ruleName_s contains \"METHOD-ENFORCEMENT\", \"Method Attacks\",\"Unspecified Rule\")))))))))))))))\r\n| project TimeGenerated, URI = requestUri_s, [\"Attack Type\"], Action = action_s, Description = iff(details_msg_s == \"\", \"N/A\", details_msg_s), [\"Rule Name\"] = ruleName_s, [\"User Agent\"] = userAgent_s1, [\"HTTP Status Code\"] = httpStatusCode_d1, [\"HTTP Method\"] = httpMethod_s1, [\"Request Size\"] = RequestSizeMB, [\"Response Size\"] = ResponseSizeMB , [\"Country\"] = clientCountry_s1\r\n| order by TimeGenerated desc;",
                          "size": 0,
                          "title": "Time Range: {TimeRangeInvestigate:label}",
                          "showExportToExcel": true,
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "gridSettings": {
                            "formatters": [
                              {
                                "columnMatch": "TimeGenerated",
                                "formatter": 0,
                                "formatOptions": {
                                  "customColumnWidthSetting": "30ch"
                                }
                              },
                              {
                                "columnMatch": "IP Address",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "[\"IPBlockCheck\"]",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ],
                                  "customColumnWidthSetting": "25ch"
                                }
                              },
                              {
                                "columnMatch": "Action",
                                "formatter": 18,
                                "formatOptions": {
                                  "thresholdsOptions": "colors",
                                  "thresholdsGrid": [
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Allow",
                                      "representation": "green",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Log",
                                      "representation": "yellow",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "AnomalyScoring",
                                      "representation": "orange",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "==",
                                      "thresholdValue": "Block",
                                      "representation": "redBright",
                                      "text": "{0}{1}"
                                    },
                                    {
                                      "operator": "Default",
                                      "thresholdValue": null,
                                      "text": "{0}{1}"
                                    }
                                  ]
                                }
                              },
                              {
                                "columnMatch": "IPBlockCheck",
                                "formatter": 5
                              }
                            ],
                            "rowLimit": 10000,
                            "filter": true
                          }
                        },
                        "customWidth": "70",
                        "conditionalVisibility": {
                          "parameterName": "TimeRangeInvestigate",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 3"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "AzureDiagnostics\r\n| where TimeGenerated {TimeRangeInvestigate}\r\n| where requestUri_s startswith \"{Site}\"\r\n| where Category == \"FrontDoorWebApplicationFirewallLog\"\r\n| where ruleName_s contains \"Microsoft_DefaultRuleSet-2.1-\"\r\n| where clientIP_s == \"{ClientIP}\"\r\n| summarize count() by action_s",
                          "size": 3,
                          "title": "Rule Hits in {TimeRangeInvestigate:label}",
                          "noDataMessage": "Please brush a larger Time Range area for Pie Chart Info",
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces",
                          "visualization": "piechart"
                        },
                        "customWidth": "30",
                        "conditionalVisibility": {
                          "parameterName": "TimeRangeInvestigate",
                          "comparison": "isNotEqualTo"
                        },
                        "name": "query - 12"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 15"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": "---"
                        },
                        "name": "text - 10"
                      },
                      {
                        "type": 1,
                        "content": {
                          "json": ""
                        },
                        "name": "text - 16"
                      },
                      {
                        "type": 3,
                        "content": {
                          "version": "KqlItem/1.0",
                          "query": "externaldata(fraud_score:string, bot_status:string, is_crawler:string, proxy:string, vpn:string, active_vpn:string, tor:string, active_tor:string, recent_abuse:string, country_code:string, region:string, city:string, organization:string, ISP:string, ASN:string, host:string)\r\n[\r\n  h@\"https://ipqualityscore.com/api/json/ip/SzorffTYCpTkHKMGs06k6VFcMYuyPwbw/{ClientIP}?strictness=1&allow_public_access_points=false&fast=false&lighter_penalties=false&mobile=false\"\r\n]\r\nwith(format=\"json\")",
                          "size": 4,
                          "timeContext": {
                            "durationMs": 86400000
                          },
                          "queryType": 0,
                          "resourceType": "microsoft.operationalinsights/workspaces"
                        },
                        "name": "query - 6"
                      }
                    ]
                  },
                  "conditionalVisibilities": [
                    {
                      "parameterName": "Investigate",
                      "comparison": "isEqualTo",
                      "value": "yes"
                    },
                    {
                      "parameterName": "ClientIP",
                      "comparison": "isNotEqualTo"
                    }
                  ],
                  "name": "group - 13"
                }
              ]
            },
            "name": "group - 3",
            "styleSettings": {
              "showBorder": true
            }
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "attackmgt"
      },
      "name": "group - 3"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "loadType": "always",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "## Help!\r\n\r\n#### This tab provides more information about all of the alerts that appear on the Dashboard. An orange warning indicates the detection of an anomaly, while a green tick indicates that the specific category is good to go. \r\n\r\n##### Note: This tab, like the alerts mentioned in the Dashboard, is dependent on the Look-up Time Range. When you've been away for a while and want to investigate any anomalies that have occurred, you can change the Look-up Time accordingly.\r\n\r\n##### Note 2: These are unmanaged attacks, which means that Microsoft hasn't yet blocked that specific host and may require our immediate attention. The default look-up time range is one hour, which is also the best range to maintain while actively monitoring. If you forget to monitor a specific time period during the day, you can easily return to the look-up range to see if any attacks were missed. ",
              "style": "info"
            },
            "conditionalVisibility": {
              "parameterName": "Help2",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "text - 29"
          },
          {
            "type": 1,
            "content": {
              "json": "---"
            },
            "conditionalVisibility": {
              "parameterName": "Help2",
              "comparison": "isEqualTo",
              "value": "yes"
            },
            "name": "text - 31"
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 31"
          },
          {
            "type": 1,
            "content": {
              "json": "## Traffic Alerts",
              "style": "info"
            },
            "name": "text - 3 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Unusual Amount of Requests sent by Host(s): \r\n#### Details: The following IP addresses have been identified as generating an unusually high volume of requests, exceeding the threshold of 300 requests per minute. This has triggered our custom alert system. While this level of traffic is atypical, it is not inherently detrimental. The decision to block these IP addresses depends on the nature of the host’s activities. Microsoft may implement blocking measures if the activities are determined to be malicious.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|Count|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{UNUSUALREQ200}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "UNUSUALREQ200",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Denial-of-Service Attack Detected: \r\n#### Details: The IP addresses listed below sent an unusually large number of requests at 5-minute intervals. This alert is triggered when the number of requests per 5 minutes exceeds 1000, and it is blocked using a custom Rate-Limiting Rule in our Azure Web Application Firewall policy.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|Count|Country|Severity|Reputation Score|Action||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{DDoS}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "DDoS",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6"
          },
          {
            "type": 1,
            "content": {
              "json": "### Unusual Amount of Requests sent by Host(s)\r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "UNUSUALREQ200",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Denial-of-Service Attacks \r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "DDoS",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 33"
          },
          {
            "type": 1,
            "content": {
              "json": "## Bot / Crawler Alerts",
              "style": "info"
            },
            "name": "text - 3 - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Web Crawling / Penetration Testing Detected: \r\n#### Details: A Web Crawling and/or Penetration Testing has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{PENTEST}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "PENTEST",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Suspicious Bot Activity Detected: \r\n#### Details: A Suspicious Bot Activity has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{UBOTSTI}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "UBOTSTI",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Web Crawling / Penetration Testing\r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "PENTEST",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Suspicious Bot Activity Detected\r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "UBOTSTI",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": ""
            },
            "name": "text - 37"
          },
          {
            "type": 1,
            "content": {
              "json": "## Attack Alerts",
              "style": "info"
            },
            "name": "text - 3"
          },
          {
            "type": 1,
            "content": {
              "json": "### SQL Injection Detected: \r\n#### Details: A SQL Injection Attack has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{SQL}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "SQL",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Cross-Site Scripting Detected: \r\n#### Details: A Cross-Site Scripting Attack has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{XSS}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "XSS",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Local File Inclusion Detected: \r\n#### Details: A Local File Inclusion Attack has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{LFI}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "LFI",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Remote File Inclusion Detected: \r\n#### Details: A Remote File Inclusion Attack has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{RFI}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "RFI",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### PHP Injection Attack Detected: \r\n#### Details: A PHP Injection Attack has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{PHP}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "PHP",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Node.JS Injection Attack Detected: \r\n#### Details: A Node.JS Injection Attack has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{NODEJS}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "NODEJS",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Suspicious Java Class Detected: \r\n#### Details: A Suspicious Java Class has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{JAVA}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "JAVA",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Protocol Attack Detected: \r\n#### Details: A Protocol Attack has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{PROTOCOLATTACK}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "PROTOCOLATTACK",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Session Fixation Attack Detected: \r\n#### Details: A Session Fixation Attack has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{FIX}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "FIX",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Web-Shell Attack Detected: \r\n#### Details: A Web-Shell Attack has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{WebShell}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "WebShell",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Common Vulnerabilities and Exposures Detected: \r\n#### Details: A Common Vulnerabilities and Exposures has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{CVE}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "CVE",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Path Traversal Evasion Detected: \r\n#### Details: A Path Traversal Evasion has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{PATHT}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "PATHT",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Remote Code Execution Detected: \r\n#### Details: A Remote Code Execution has been detected on the hosts listed below. Please be aware that you are seeing this alert because Microsoft has not yet blocked it automatically.\r\n---\r\n|Date/Time [UTC]|Host|IP Address|HTTP Status Code|Country|Severity|Reputation Score|Investigation||\r\n|---|---|---|---|---|---|---|---|---|\r\n|{RCE}|",
              "style": "warning"
            },
            "conditionalVisibility": {
              "parameterName": "RCE",
              "comparison": "isNotEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### SQL Injection \r\n###### Not Detected\r\n",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "SQL",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Cross-Site Scripting \r\n###### Not Detected\r\n",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "XSS",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Local File Inclusion \r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "LFI",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Remote File Inclusion \r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "RFI",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### PHP Injection Attack \r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "PHP",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Node.JS Injection Attack \r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "NODEJS",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Suspicious Java Class \r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "JAVA",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Protocol Attack \r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "PROTOCOLATTACK",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Session Fixation \r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "FIX",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Web-Shell Attack \r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "WebShell",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Common Vulnerabilities and Exposures \r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "CVE",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Path Traversal Evasion \r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "PATHT",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          },
          {
            "type": 1,
            "content": {
              "json": "### Remote Code Execution \r\n###### Not Detected",
              "style": "success"
            },
            "customWidth": "33",
            "conditionalVisibility": {
              "parameterName": "RCE",
              "comparison": "isEqualTo"
            },
            "name": "text - 6 - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy - Copy"
          }
        ]
      },
      "conditionalVisibility": {
        "parameterName": "SelectedTab",
        "comparison": "isEqualTo",
        "value": "alerts"
      },
      "name": "group - 6"
    }
  ],
  "fallbackResourceIds": [
    "/subscriptions/fa5ce5af-8db2-426e-b50e-23d901fc1249/resourcegroups/altra-cu-prod-mgt-rg/providers/microsoft.operationalinsights/workspaces/alt-log-analytics"
  ],
  "fromTemplateId": "sentinel-UserWorkbook",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
